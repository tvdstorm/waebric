/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.parser;

import org.sablecc.grammar.waebric.node.*;
import org.sablecc.grammar.waebric.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTModule(@SuppressWarnings("unused") TModule node)
    {
        this.index = 0;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 1;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 2;
    }

    @Override
    public void caseTEach(@SuppressWarnings("unused") TEach node)
    {
        this.index = 3;
    }

    @Override
    public void caseTLet(@SuppressWarnings("unused") TLet node)
    {
        this.index = 4;
    }

    @Override
    public void caseTDef(@SuppressWarnings("unused") TDef node)
    {
        this.index = 5;
    }

    @Override
    public void caseTIn(@SuppressWarnings("unused") TIn node)
    {
        this.index = 6;
    }

    @Override
    public void caseTEnd(@SuppressWarnings("unused") TEnd node)
    {
        this.index = 7;
    }

    @Override
    public void caseTComment(@SuppressWarnings("unused") TComment node)
    {
        this.index = 8;
    }

    @Override
    public void caseTEcho(@SuppressWarnings("unused") TEcho node)
    {
        this.index = 9;
    }

    @Override
    public void caseTCdata(@SuppressWarnings("unused") TCdata node)
    {
        this.index = 10;
    }

    @Override
    public void caseTYield(@SuppressWarnings("unused") TYield node)
    {
        this.index = 11;
    }

    @Override
    public void caseTImport(@SuppressWarnings("unused") TImport node)
    {
        this.index = 12;
    }

    @Override
    public void caseTSite(@SuppressWarnings("unused") TSite node)
    {
        this.index = 13;
    }

    @Override
    public void caseTList(@SuppressWarnings("unused") TList node)
    {
        this.index = 14;
    }

    @Override
    public void caseTRecord(@SuppressWarnings("unused") TRecord node)
    {
        this.index = 15;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 16;
    }

    @Override
    public void caseTLParen(@SuppressWarnings("unused") TLParen node)
    {
        this.index = 17;
    }

    @Override
    public void caseTRParen(@SuppressWarnings("unused") TRParen node)
    {
        this.index = 18;
    }

    @Override
    public void caseTLBrace(@SuppressWarnings("unused") TLBrace node)
    {
        this.index = 19;
    }

    @Override
    public void caseTRBrace(@SuppressWarnings("unused") TRBrace node)
    {
        this.index = 20;
    }

    @Override
    public void caseTLBracket(@SuppressWarnings("unused") TLBracket node)
    {
        this.index = 21;
    }

    @Override
    public void caseTRBracket(@SuppressWarnings("unused") TRBracket node)
    {
        this.index = 22;
    }

    @Override
    public void caseTSemiColon(@SuppressWarnings("unused") TSemiColon node)
    {
        this.index = 23;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 24;
    }

    @Override
    public void caseTDot(@SuppressWarnings("unused") TDot node)
    {
        this.index = 25;
    }

    @Override
    public void caseTCaret(@SuppressWarnings("unused") TCaret node)
    {
        this.index = 26;
    }

    @Override
    public void caseTNumberSign(@SuppressWarnings("unused") TNumberSign node)
    {
        this.index = 27;
    }

    @Override
    public void caseTDollarSign(@SuppressWarnings("unused") TDollarSign node)
    {
        this.index = 28;
    }

    @Override
    public void caseTAtSign(@SuppressWarnings("unused") TAtSign node)
    {
        this.index = 29;
    }

    @Override
    public void caseTPercentSign(@SuppressWarnings("unused") TPercentSign node)
    {
        this.index = 30;
    }

    @Override
    public void caseTQuestionMark(@SuppressWarnings("unused") TQuestionMark node)
    {
        this.index = 31;
    }

    @Override
    public void caseTExclamMark(@SuppressWarnings("unused") TExclamMark node)
    {
        this.index = 32;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 33;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 34;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 35;
    }

    @Override
    public void caseTAssign(@SuppressWarnings("unused") TAssign node)
    {
        this.index = 36;
    }

    @Override
    public void caseTSlash(@SuppressWarnings("unused") TSlash node)
    {
        this.index = 37;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 38;
    }

    @Override
    public void caseTIdCon(@SuppressWarnings("unused") TIdCon node)
    {
        this.index = 39;
    }

    @Override
    public void caseTNatCon(@SuppressWarnings("unused") TNatCon node)
    {
        this.index = 40;
    }

    @Override
    public void caseTSymbolCon(@SuppressWarnings("unused") TSymbolCon node)
    {
        this.index = 41;
    }

    @Override
    public void caseTStrCon(@SuppressWarnings("unused") TStrCon node)
    {
        this.index = 42;
    }

    @Override
    public void caseTFilename(@SuppressWarnings("unused") TFilename node)
    {
        this.index = 43;
    }

    @Override
    public void caseTText(@SuppressWarnings("unused") TText node)
    {
        this.index = 44;
    }

    @Override
    public void caseTPreText(@SuppressWarnings("unused") TPreText node)
    {
        this.index = 45;
    }

    @Override
    public void caseTPostText(@SuppressWarnings("unused") TPostText node)
    {
        this.index = 46;
    }

    @Override
    public void caseTMidText(@SuppressWarnings("unused") TMidText node)
    {
        this.index = 47;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 48;
    }
}
