/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.node;

import org.sablecc.grammar.waebric.analysis.*;

@SuppressWarnings("nls")
public final class ACommentStatement extends PStatement
{
    private TStrCon _strCon_;

    public ACommentStatement()
    {
        // Constructor
    }

    public ACommentStatement(
        @SuppressWarnings("hiding") TStrCon _strCon_)
    {
        // Constructor
        setStrCon(_strCon_);

    }

    @Override
    public Object clone()
    {
        return new ACommentStatement(
            cloneNode(this._strCon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACommentStatement(this);
    }

    public TStrCon getStrCon()
    {
        return this._strCon_;
    }

    public void setStrCon(TStrCon node)
    {
        if(this._strCon_ != null)
        {
            this._strCon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._strCon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._strCon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._strCon_ == child)
        {
            this._strCon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._strCon_ == oldChild)
        {
            setStrCon((TStrCon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
