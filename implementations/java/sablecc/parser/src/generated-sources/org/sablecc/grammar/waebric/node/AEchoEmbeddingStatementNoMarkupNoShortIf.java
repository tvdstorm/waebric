/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.node;

import org.sablecc.grammar.waebric.analysis.*;

@SuppressWarnings("nls")
public final class AEchoEmbeddingStatementNoMarkupNoShortIf extends PStatementNoMarkupNoShortIf
{
    private TEcho _echo_;
    private PEmbedding _embedding_;
    private TSemiColon _semiColon_;

    public AEchoEmbeddingStatementNoMarkupNoShortIf()
    {
        // Constructor
    }

    public AEchoEmbeddingStatementNoMarkupNoShortIf(
        @SuppressWarnings("hiding") TEcho _echo_,
        @SuppressWarnings("hiding") PEmbedding _embedding_,
        @SuppressWarnings("hiding") TSemiColon _semiColon_)
    {
        // Constructor
        setEcho(_echo_);

        setEmbedding(_embedding_);

        setSemiColon(_semiColon_);

    }

    @Override
    public Object clone()
    {
        return new AEchoEmbeddingStatementNoMarkupNoShortIf(
            cloneNode(this._echo_),
            cloneNode(this._embedding_),
            cloneNode(this._semiColon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEchoEmbeddingStatementNoMarkupNoShortIf(this);
    }

    public TEcho getEcho()
    {
        return this._echo_;
    }

    public void setEcho(TEcho node)
    {
        if(this._echo_ != null)
        {
            this._echo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._echo_ = node;
    }

    public PEmbedding getEmbedding()
    {
        return this._embedding_;
    }

    public void setEmbedding(PEmbedding node)
    {
        if(this._embedding_ != null)
        {
            this._embedding_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._embedding_ = node;
    }

    public TSemiColon getSemiColon()
    {
        return this._semiColon_;
    }

    public void setSemiColon(TSemiColon node)
    {
        if(this._semiColon_ != null)
        {
            this._semiColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semiColon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._echo_)
            + toString(this._embedding_)
            + toString(this._semiColon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._echo_ == child)
        {
            this._echo_ = null;
            return;
        }

        if(this._embedding_ == child)
        {
            this._embedding_ = null;
            return;
        }

        if(this._semiColon_ == child)
        {
            this._semiColon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._echo_ == oldChild)
        {
            setEcho((TEcho) newChild);
            return;
        }

        if(this._embedding_ == oldChild)
        {
            setEmbedding((PEmbedding) newChild);
            return;
        }

        if(this._semiColon_ == oldChild)
        {
            setSemiColon((TSemiColon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
