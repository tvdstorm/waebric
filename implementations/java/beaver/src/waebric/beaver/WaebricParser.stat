// This file was generated by Beaver v0.9.6.1

1:	MODULE: SHIFT; goto 2
	module: ACCEPT
2:	IDCON: SHIFT; goto 216
	moduleid: SHIFT; goto 3
	idcons: SHIFT; goto 213
3:	EOF: REDUCE opt$lst$moduleelement = 
	DEF: SHIFT; goto 10
	SITE: SHIFT; goto 217
	IMPORT: SHIFT; goto 211
	moduleelement: SHIFT; goto 233
	functiondef: SHIFT; goto 7
	import: SHIFT; goto 8
	site: SHIFT; goto 9
	lst$moduleelement: SHIFT; goto 5
	opt$lst$moduleelement: SHIFT; goto 4
4:	EOF: REDUCE module = MODULE moduleid.i opt$lst$moduleelement.e
5:	EOF: REDUCE opt$lst$moduleelement = lst$moduleelement
	DEF: SHIFT; goto 10
	SITE: SHIFT; goto 217
	IMPORT: SHIFT; goto 211
	moduleelement: SHIFT; goto 6
	functiondef: SHIFT; goto 7
	import: SHIFT; goto 8
	site: SHIFT; goto 9
6:	EOF: REDUCE lst$moduleelement = lst$moduleelement moduleelement
	DEF: REDUCE lst$moduleelement = lst$moduleelement moduleelement
	SITE: REDUCE lst$moduleelement = lst$moduleelement moduleelement
	IMPORT: REDUCE lst$moduleelement = lst$moduleelement moduleelement
7:	EOF: REDUCE moduleelement = functiondef
	DEF: REDUCE moduleelement = functiondef
	SITE: REDUCE moduleelement = functiondef
	IMPORT: REDUCE moduleelement = functiondef
8:	EOF: REDUCE moduleelement = import
	DEF: REDUCE moduleelement = import
	SITE: REDUCE moduleelement = import
	IMPORT: REDUCE moduleelement = import
9:	EOF: REDUCE moduleelement = site
	DEF: REDUCE moduleelement = site
	SITE: REDUCE moduleelement = site
	IMPORT: REDUCE moduleelement = site
10:	IDCON: SHIFT; goto 11
11:	IDCON: REDUCE formals = 
	LBRACE: REDUCE formals = 
	IF: REDUCE formals = 
	EACH: REDUCE formals = 
	LET: REDUCE formals = 
	COMMENT: REDUCE formals = 
	ECHO: REDUCE formals = 
	CDATA: REDUCE formals = 
	YIELD: REDUCE formals = 
	END: REDUCE formals = 
	LPAREN: SHIFT; goto 208
	formals: SHIFT; goto 12
12:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	END: REDUCE opt$lst$statement = 
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 72
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 133
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 17
	StatementMarkupStatement: SHIFT; goto 21
	lst$statement: SHIFT; goto 15
	opt$lst$statement: SHIFT; goto 13
13:	END: SHIFT; goto 14
14:	EOF: REDUCE functiondef = DEF IDCON.i formals.f opt$lst$statement.s END
	DEF: REDUCE functiondef = DEF IDCON.i formals.f opt$lst$statement.s END
	SITE: REDUCE functiondef = DEF IDCON.i formals.f opt$lst$statement.s END
	IMPORT: REDUCE functiondef = DEF IDCON.i formals.f opt$lst$statement.s END
15:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	END: REDUCE opt$lst$statement = lst$statement
	RBRACE: REDUCE opt$lst$statement = lst$statement
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 72
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 16
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 17
	StatementMarkupStatement: SHIFT; goto 21
16:	IDCON: REDUCE lst$statement = lst$statement statement
	LBRACE: REDUCE lst$statement = lst$statement statement
	IF: REDUCE lst$statement = lst$statement statement
	EACH: REDUCE lst$statement = lst$statement statement
	LET: REDUCE lst$statement = lst$statement statement
	COMMENT: REDUCE lst$statement = lst$statement statement
	ECHO: REDUCE lst$statement = lst$statement statement
	CDATA: REDUCE lst$statement = lst$statement statement
	YIELD: REDUCE lst$statement = lst$statement statement
	END: REDUCE lst$statement = lst$statement statement
	RBRACE: REDUCE lst$statement = lst$statement statement
17:	IDCON: REDUCE statement = StatementWithoutSubstatement
	LBRACE: REDUCE statement = StatementWithoutSubstatement
	IF: REDUCE statement = StatementWithoutSubstatement
	EACH: REDUCE statement = StatementWithoutSubstatement
	LET: REDUCE statement = StatementWithoutSubstatement
	COMMENT: REDUCE statement = StatementWithoutSubstatement
	ECHO: REDUCE statement = StatementWithoutSubstatement
	CDATA: REDUCE statement = StatementWithoutSubstatement
	YIELD: REDUCE statement = StatementWithoutSubstatement
	END: REDUCE statement = StatementWithoutSubstatement
	RBRACE: REDUCE statement = StatementWithoutSubstatement
	IN: REDUCE statement = StatementWithoutSubstatement
18:	IDCON: REDUCE statement = StatementIf
	LBRACE: REDUCE statement = StatementIf
	IF: REDUCE statement = StatementIf
	EACH: REDUCE statement = StatementIf
	LET: REDUCE statement = StatementIf
	COMMENT: REDUCE statement = StatementIf
	ECHO: REDUCE statement = StatementIf
	CDATA: REDUCE statement = StatementIf
	YIELD: REDUCE statement = StatementIf
	END: REDUCE statement = StatementIf
	RBRACE: REDUCE statement = StatementIf
	IN: REDUCE statement = StatementIf
19:	IDCON: REDUCE statement = StatementIfElse
	LBRACE: REDUCE statement = StatementIfElse
	IF: REDUCE statement = StatementIfElse
	EACH: REDUCE statement = StatementIfElse
	LET: REDUCE statement = StatementIfElse
	COMMENT: REDUCE statement = StatementIfElse
	ECHO: REDUCE statement = StatementIfElse
	CDATA: REDUCE statement = StatementIfElse
	YIELD: REDUCE statement = StatementIfElse
	END: REDUCE statement = StatementIfElse
	RBRACE: REDUCE statement = StatementIfElse
	IN: REDUCE statement = StatementIfElse
20:	IDCON: REDUCE statement = StatementEach
	LBRACE: REDUCE statement = StatementEach
	IF: REDUCE statement = StatementEach
	EACH: REDUCE statement = StatementEach
	LET: REDUCE statement = StatementEach
	COMMENT: REDUCE statement = StatementEach
	ECHO: REDUCE statement = StatementEach
	CDATA: REDUCE statement = StatementEach
	YIELD: REDUCE statement = StatementEach
	END: REDUCE statement = StatementEach
	RBRACE: REDUCE statement = StatementEach
	IN: REDUCE statement = StatementEach
21:	IDCON: REDUCE statement = StatementMarkupStatement
	LBRACE: REDUCE statement = StatementMarkupStatement
	IF: REDUCE statement = StatementMarkupStatement
	EACH: REDUCE statement = StatementMarkupStatement
	LET: REDUCE statement = StatementMarkupStatement
	COMMENT: REDUCE statement = StatementMarkupStatement
	ECHO: REDUCE statement = StatementMarkupStatement
	CDATA: REDUCE statement = StatementMarkupStatement
	YIELD: REDUCE statement = StatementMarkupStatement
	END: REDUCE statement = StatementMarkupStatement
	RBRACE: REDUCE statement = StatementMarkupStatement
	IN: REDUCE statement = StatementMarkupStatement
22:	IDCON: REDUCE StatementWithoutSubstatement = StatementBlock
	LBRACE: REDUCE StatementWithoutSubstatement = StatementBlock
	IF: REDUCE StatementWithoutSubstatement = StatementBlock
	EACH: REDUCE StatementWithoutSubstatement = StatementBlock
	LET: REDUCE StatementWithoutSubstatement = StatementBlock
	COMMENT: REDUCE StatementWithoutSubstatement = StatementBlock
	ECHO: REDUCE StatementWithoutSubstatement = StatementBlock
	CDATA: REDUCE StatementWithoutSubstatement = StatementBlock
	YIELD: REDUCE StatementWithoutSubstatement = StatementBlock
	END: REDUCE StatementWithoutSubstatement = StatementBlock
	RBRACE: REDUCE StatementWithoutSubstatement = StatementBlock
	IN: REDUCE StatementWithoutSubstatement = StatementBlock
	ELSE: REDUCE StatementWithoutSubstatement = StatementBlock
23:	IDCON: REDUCE StatementWithoutSubstatement = StatementCData
	LBRACE: REDUCE StatementWithoutSubstatement = StatementCData
	IF: REDUCE StatementWithoutSubstatement = StatementCData
	EACH: REDUCE StatementWithoutSubstatement = StatementCData
	LET: REDUCE StatementWithoutSubstatement = StatementCData
	COMMENT: REDUCE StatementWithoutSubstatement = StatementCData
	ECHO: REDUCE StatementWithoutSubstatement = StatementCData
	CDATA: REDUCE StatementWithoutSubstatement = StatementCData
	YIELD: REDUCE StatementWithoutSubstatement = StatementCData
	END: REDUCE StatementWithoutSubstatement = StatementCData
	RBRACE: REDUCE StatementWithoutSubstatement = StatementCData
	IN: REDUCE StatementWithoutSubstatement = StatementCData
	ELSE: REDUCE StatementWithoutSubstatement = StatementCData
24:	IDCON: REDUCE StatementWithoutSubstatement = StatementYield
	LBRACE: REDUCE StatementWithoutSubstatement = StatementYield
	IF: REDUCE StatementWithoutSubstatement = StatementYield
	EACH: REDUCE StatementWithoutSubstatement = StatementYield
	LET: REDUCE StatementWithoutSubstatement = StatementYield
	COMMENT: REDUCE StatementWithoutSubstatement = StatementYield
	ECHO: REDUCE StatementWithoutSubstatement = StatementYield
	CDATA: REDUCE StatementWithoutSubstatement = StatementYield
	YIELD: REDUCE StatementWithoutSubstatement = StatementYield
	END: REDUCE StatementWithoutSubstatement = StatementYield
	RBRACE: REDUCE StatementWithoutSubstatement = StatementYield
	IN: REDUCE StatementWithoutSubstatement = StatementYield
	ELSE: REDUCE StatementWithoutSubstatement = StatementYield
25:	IDCON: REDUCE StatementWithoutSubstatement = StatementComment
	LBRACE: REDUCE StatementWithoutSubstatement = StatementComment
	IF: REDUCE StatementWithoutSubstatement = StatementComment
	EACH: REDUCE StatementWithoutSubstatement = StatementComment
	LET: REDUCE StatementWithoutSubstatement = StatementComment
	COMMENT: REDUCE StatementWithoutSubstatement = StatementComment
	ECHO: REDUCE StatementWithoutSubstatement = StatementComment
	CDATA: REDUCE StatementWithoutSubstatement = StatementComment
	YIELD: REDUCE StatementWithoutSubstatement = StatementComment
	END: REDUCE StatementWithoutSubstatement = StatementComment
	RBRACE: REDUCE StatementWithoutSubstatement = StatementComment
	IN: REDUCE StatementWithoutSubstatement = StatementComment
	ELSE: REDUCE StatementWithoutSubstatement = StatementComment
26:	IDCON: REDUCE StatementWithoutSubstatement = StatementMarkup
	LBRACE: REDUCE StatementWithoutSubstatement = StatementMarkup
	IF: REDUCE StatementWithoutSubstatement = StatementMarkup
	EACH: REDUCE StatementWithoutSubstatement = StatementMarkup
	LET: REDUCE StatementWithoutSubstatement = StatementMarkup
	COMMENT: REDUCE StatementWithoutSubstatement = StatementMarkup
	ECHO: REDUCE StatementWithoutSubstatement = StatementMarkup
	CDATA: REDUCE StatementWithoutSubstatement = StatementMarkup
	YIELD: REDUCE StatementWithoutSubstatement = StatementMarkup
	END: REDUCE StatementWithoutSubstatement = StatementMarkup
	RBRACE: REDUCE StatementWithoutSubstatement = StatementMarkup
	IN: REDUCE StatementWithoutSubstatement = StatementMarkup
	ELSE: REDUCE StatementWithoutSubstatement = StatementMarkup
27:	IDCON: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	LBRACE: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	IF: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	EACH: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	LET: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	COMMENT: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	ECHO: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	CDATA: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	YIELD: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	END: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	RBRACE: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	IN: REDUCE StatementWithoutSubstatement = StatementEchoExpression
	ELSE: REDUCE StatementWithoutSubstatement = StatementEchoExpression
28:	IDCON: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	LBRACE: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	IF: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	EACH: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	LET: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	COMMENT: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	ECHO: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	CDATA: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	YIELD: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	END: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	RBRACE: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	IN: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
	ELSE: REDUCE StatementWithoutSubstatement = StatementEchoEmbedding
29:	IDCON: REDUCE StatementWithoutSubstatement = StatementLet
	LBRACE: REDUCE StatementWithoutSubstatement = StatementLet
	IF: REDUCE StatementWithoutSubstatement = StatementLet
	EACH: REDUCE StatementWithoutSubstatement = StatementLet
	LET: REDUCE StatementWithoutSubstatement = StatementLet
	COMMENT: REDUCE StatementWithoutSubstatement = StatementLet
	ECHO: REDUCE StatementWithoutSubstatement = StatementLet
	CDATA: REDUCE StatementWithoutSubstatement = StatementLet
	YIELD: REDUCE StatementWithoutSubstatement = StatementLet
	END: REDUCE StatementWithoutSubstatement = StatementLet
	RBRACE: REDUCE StatementWithoutSubstatement = StatementLet
	IN: REDUCE StatementWithoutSubstatement = StatementLet
	ELSE: REDUCE StatementWithoutSubstatement = StatementLet
30:	LPAREN: SHIFT; goto 31
31:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	NOT: SHIFT; goto 202
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 195
	simplepredicate: SHIFT; goto 206
	predicate: SHIFT; goto 32
	conjunction: SHIFT; goto 207
32:	RPAREN: SHIFT; goto 33
	ANDAND: SHIFT; goto 193
	OROR: SHIFT; goto 204
33:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 182
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 189
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 34
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 179
	StatementMarkupStatement: SHIFT; goto 21
	StatementEachNoShortIf: SHIFT; goto 180
	StatementNoShortIf: SHIFT; goto 35
	StatementMarkupStatementNoShortIf: SHIFT; goto 181
34:	IDCON: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	LBRACE: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	IF: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	EACH: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	LET: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	COMMENT: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	ECHO: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	CDATA: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	YIELD: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	END: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	RBRACE: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
	IN: REDUCE StatementIf = IF LPAREN predicate.p RPAREN statement.a
35:	ELSE: SHIFT; goto 36
36:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 72
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 37
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 17
	StatementMarkupStatement: SHIFT; goto 21
37:	IDCON: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	LBRACE: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	IF: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	EACH: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	LET: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	COMMENT: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	ECHO: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	CDATA: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	YIELD: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	END: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	RBRACE: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
	IN: REDUCE StatementIfElse = IF LPAREN predicate.p RPAREN StatementNoShortIf.a ELSE statement.b
38:	LPAREN: SHIFT; goto 39
39:	IDCON: SHIFT; goto 65
	var: SHIFT; goto 40
40:	COLON: SHIFT; goto 41
41:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 42
42:	RPAREN: SHIFT; goto 70
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
43:	IDCON: SHIFT; goto 44
44:	IDCON: REDUCE expression = expression.e DOT IDCON.i
	LBRACE: REDUCE expression = expression.e DOT IDCON.i
	NATCON: REDUCE expression = expression.e DOT IDCON.i
	RBRACE: REDUCE expression = expression.e DOT IDCON.i
	LBRACK: REDUCE expression = expression.e DOT IDCON.i
	TEXT: REDUCE expression = expression.e DOT IDCON.i
	SYMBOLCON: REDUCE expression = expression.e DOT IDCON.i
	SEMICOLON: REDUCE expression = expression.e DOT IDCON.i
	RPAREN: REDUCE expression = expression.e DOT IDCON.i
	DOT: REDUCE expression = expression.e DOT IDCON.i
	PLUS: REDUCE expression = expression.e DOT IDCON.i
	COMMA: REDUCE expression = expression.e DOT IDCON.i
	ANDAND: REDUCE expression = expression.e DOT IDCON.i
	OROR: REDUCE expression = expression.e DOT IDCON.i
	MIDTEXT: REDUCE expression = expression.e DOT IDCON.i
	POSTTEXT: REDUCE expression = expression.e DOT IDCON.i
	RBRACK: REDUCE expression = expression.e DOT IDCON.i
45:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 46
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
46:	IDCON: REDUCE expression = expression.e PLUS simpleexpression.f
	LBRACE: REDUCE expression = expression.e PLUS simpleexpression.f
	NATCON: REDUCE expression = expression.e PLUS simpleexpression.f
	RBRACE: REDUCE expression = expression.e PLUS simpleexpression.f
	LBRACK: REDUCE expression = expression.e PLUS simpleexpression.f
	TEXT: REDUCE expression = expression.e PLUS simpleexpression.f
	SYMBOLCON: REDUCE expression = expression.e PLUS simpleexpression.f
	SEMICOLON: REDUCE expression = expression.e PLUS simpleexpression.f
	RPAREN: REDUCE expression = expression.e PLUS simpleexpression.f
	DOT: REDUCE expression = expression.e PLUS simpleexpression.f
	PLUS: REDUCE expression = expression.e PLUS simpleexpression.f
	COMMA: REDUCE expression = expression.e PLUS simpleexpression.f
	ANDAND: REDUCE expression = expression.e PLUS simpleexpression.f
	OROR: REDUCE expression = expression.e PLUS simpleexpression.f
	MIDTEXT: REDUCE expression = expression.e PLUS simpleexpression.f
	POSTTEXT: REDUCE expression = expression.e PLUS simpleexpression.f
	RBRACK: REDUCE expression = expression.e PLUS simpleexpression.f
47:	IDCON: REDUCE simpleexpression = var
	LBRACE: REDUCE simpleexpression = var
	NATCON: REDUCE simpleexpression = var
	RBRACE: REDUCE simpleexpression = var
	LBRACK: REDUCE simpleexpression = var
	TEXT: REDUCE simpleexpression = var
	SYMBOLCON: REDUCE simpleexpression = var
	SEMICOLON: REDUCE simpleexpression = var
	RPAREN: REDUCE simpleexpression = var
	DOT: REDUCE simpleexpression = var
	PLUS: REDUCE simpleexpression = var
	COMMA: REDUCE simpleexpression = var
	ANDAND: REDUCE simpleexpression = var
	OROR: REDUCE simpleexpression = var
	MIDTEXT: REDUCE simpleexpression = var
	POSTTEXT: REDUCE simpleexpression = var
	RBRACK: REDUCE simpleexpression = var
48:	IDCON: REDUCE simpleexpression = symbolcon.s
	LBRACE: REDUCE simpleexpression = symbolcon.s
	NATCON: REDUCE simpleexpression = symbolcon.s
	RBRACE: REDUCE simpleexpression = symbolcon.s
	LBRACK: REDUCE simpleexpression = symbolcon.s
	TEXT: REDUCE simpleexpression = symbolcon.s
	SYMBOLCON: REDUCE simpleexpression = symbolcon.s
	SEMICOLON: REDUCE simpleexpression = symbolcon.s
	RPAREN: REDUCE simpleexpression = symbolcon.s
	DOT: REDUCE simpleexpression = symbolcon.s
	PLUS: REDUCE simpleexpression = symbolcon.s
	COMMA: REDUCE simpleexpression = symbolcon.s
	ANDAND: REDUCE simpleexpression = symbolcon.s
	OROR: REDUCE simpleexpression = symbolcon.s
	MIDTEXT: REDUCE simpleexpression = symbolcon.s
	POSTTEXT: REDUCE simpleexpression = symbolcon.s
	RBRACK: REDUCE simpleexpression = symbolcon.s
49:	IDCON: REDUCE simpleexpression = NATCON.n
	LBRACE: REDUCE simpleexpression = NATCON.n
	NATCON: REDUCE simpleexpression = NATCON.n
	RBRACE: REDUCE simpleexpression = NATCON.n
	LBRACK: REDUCE simpleexpression = NATCON.n
	TEXT: REDUCE simpleexpression = NATCON.n
	SYMBOLCON: REDUCE simpleexpression = NATCON.n
	SEMICOLON: REDUCE simpleexpression = NATCON.n
	RPAREN: REDUCE simpleexpression = NATCON.n
	DOT: REDUCE simpleexpression = NATCON.n
	PLUS: REDUCE simpleexpression = NATCON.n
	COMMA: REDUCE simpleexpression = NATCON.n
	ANDAND: REDUCE simpleexpression = NATCON.n
	OROR: REDUCE simpleexpression = NATCON.n
	MIDTEXT: REDUCE simpleexpression = NATCON.n
	POSTTEXT: REDUCE simpleexpression = NATCON.n
	RBRACK: REDUCE simpleexpression = NATCON.n
50:	IDCON: REDUCE simpleexpression = textexpression.t
	LBRACE: REDUCE simpleexpression = textexpression.t
	NATCON: REDUCE simpleexpression = textexpression.t
	RBRACE: REDUCE simpleexpression = textexpression.t
	LBRACK: REDUCE simpleexpression = textexpression.t
	TEXT: REDUCE simpleexpression = textexpression.t
	SYMBOLCON: REDUCE simpleexpression = textexpression.t
	SEMICOLON: REDUCE simpleexpression = textexpression.t
	RPAREN: REDUCE simpleexpression = textexpression.t
	DOT: REDUCE simpleexpression = textexpression.t
	PLUS: REDUCE simpleexpression = textexpression.t
	COMMA: REDUCE simpleexpression = textexpression.t
	ANDAND: REDUCE simpleexpression = textexpression.t
	OROR: REDUCE simpleexpression = textexpression.t
	MIDTEXT: REDUCE simpleexpression = textexpression.t
	POSTTEXT: REDUCE simpleexpression = textexpression.t
	RBRACK: REDUCE simpleexpression = textexpression.t
51:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 69
	expressions: SHIFT; goto 52
52:	COMMA: SHIFT; goto 54
	RBRACK: SHIFT; goto 53
53:	IDCON: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	LBRACE: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	NATCON: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	RBRACE: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	LBRACK: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	TEXT: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	SYMBOLCON: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	SEMICOLON: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	RPAREN: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	DOT: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	PLUS: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	COMMA: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	ANDAND: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	OROR: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	MIDTEXT: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	POSTTEXT: REDUCE simpleexpression = LBRACK expressions.e RBRACK
	RBRACK: REDUCE simpleexpression = LBRACK expressions.e RBRACK
54:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 55
55:	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
	COMMA: REDUCE expressions = expressions COMMA expression
	RBRACK: REDUCE expressions = expressions COMMA expression
56:	IDCON: REDUCE expression = simpleexpression
	LBRACE: REDUCE expression = simpleexpression
	NATCON: REDUCE expression = simpleexpression
	RBRACE: REDUCE expression = simpleexpression
	LBRACK: REDUCE expression = simpleexpression
	TEXT: REDUCE expression = simpleexpression
	SYMBOLCON: REDUCE expression = simpleexpression
	SEMICOLON: REDUCE expression = simpleexpression
	RPAREN: REDUCE expression = simpleexpression
	DOT: REDUCE expression = simpleexpression
	PLUS: REDUCE expression = simpleexpression
	COMMA: REDUCE expression = simpleexpression
	ANDAND: REDUCE expression = simpleexpression
	OROR: REDUCE expression = simpleexpression
	MIDTEXT: REDUCE expression = simpleexpression
	POSTTEXT: REDUCE expression = simpleexpression
	RBRACK: REDUCE expression = simpleexpression
57:	IDCON: SHIFT; goto 62
	keyvaluepair: SHIFT; goto 68
	keyvaluepairs: SHIFT; goto 58
58:	RBRACE: SHIFT; goto 59
	COMMA: SHIFT; goto 60
59:	IDCON: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	LBRACE: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	NATCON: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	RBRACE: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	LBRACK: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	TEXT: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	SYMBOLCON: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	SEMICOLON: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	RPAREN: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	DOT: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	PLUS: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	COMMA: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	ANDAND: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	OROR: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	MIDTEXT: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	POSTTEXT: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
	RBRACK: REDUCE simpleexpression = LBRACE keyvaluepairs.party RBRACE
60:	IDCON: SHIFT; goto 62
	keyvaluepair: SHIFT; goto 61
61:	RBRACE: REDUCE keyvaluepairs = keyvaluepairs COMMA keyvaluepair
	COMMA: REDUCE keyvaluepairs = keyvaluepairs COMMA keyvaluepair
62:	COLON: SHIFT; goto 63
63:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 64
64:	RBRACE: REDUCE keyvaluepair = IDCON.i COLON expression.e
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
	COMMA: REDUCE keyvaluepair = IDCON.i COLON expression.e
65:	IDCON: REDUCE var = IDCON.i
	LBRACE: REDUCE var = IDCON.i
	NATCON: REDUCE var = IDCON.i
	RBRACE: REDUCE var = IDCON.i
	LBRACK: REDUCE var = IDCON.i
	TEXT: REDUCE var = IDCON.i
	SYMBOLCON: REDUCE var = IDCON.i
	SEMICOLON: REDUCE var = IDCON.i
	RPAREN: REDUCE var = IDCON.i
	DOT: REDUCE var = IDCON.i
	PLUS: REDUCE var = IDCON.i
	COMMA: REDUCE var = IDCON.i
	ANDAND: REDUCE var = IDCON.i
	OROR: REDUCE var = IDCON.i
	COLON: REDUCE var = IDCON.i
	MIDTEXT: REDUCE var = IDCON.i
	POSTTEXT: REDUCE var = IDCON.i
	RBRACK: REDUCE var = IDCON.i
66:	IDCON: REDUCE symbolcon = SYMBOLCON.s
	LBRACE: REDUCE symbolcon = SYMBOLCON.s
	NATCON: REDUCE symbolcon = SYMBOLCON.s
	RBRACE: REDUCE symbolcon = SYMBOLCON.s
	LBRACK: REDUCE symbolcon = SYMBOLCON.s
	TEXT: REDUCE symbolcon = SYMBOLCON.s
	SYMBOLCON: REDUCE symbolcon = SYMBOLCON.s
	SEMICOLON: REDUCE symbolcon = SYMBOLCON.s
	RPAREN: REDUCE symbolcon = SYMBOLCON.s
	DOT: REDUCE symbolcon = SYMBOLCON.s
	PLUS: REDUCE symbolcon = SYMBOLCON.s
	COMMA: REDUCE symbolcon = SYMBOLCON.s
	ANDAND: REDUCE symbolcon = SYMBOLCON.s
	OROR: REDUCE symbolcon = SYMBOLCON.s
	MIDTEXT: REDUCE symbolcon = SYMBOLCON.s
	POSTTEXT: REDUCE symbolcon = SYMBOLCON.s
	RBRACK: REDUCE symbolcon = SYMBOLCON.s
67:	IDCON: REDUCE textexpression = TEXT.t
	LBRACE: REDUCE textexpression = TEXT.t
	NATCON: REDUCE textexpression = TEXT.t
	RBRACE: REDUCE textexpression = TEXT.t
	LBRACK: REDUCE textexpression = TEXT.t
	TEXT: REDUCE textexpression = TEXT.t
	SYMBOLCON: REDUCE textexpression = TEXT.t
	SEMICOLON: REDUCE textexpression = TEXT.t
	RPAREN: REDUCE textexpression = TEXT.t
	DOT: REDUCE textexpression = TEXT.t
	PLUS: REDUCE textexpression = TEXT.t
	COMMA: REDUCE textexpression = TEXT.t
	ANDAND: REDUCE textexpression = TEXT.t
	OROR: REDUCE textexpression = TEXT.t
	MIDTEXT: REDUCE textexpression = TEXT.t
	POSTTEXT: REDUCE textexpression = TEXT.t
	RBRACK: REDUCE textexpression = TEXT.t
68:	RBRACE: REDUCE keyvaluepairs = keyvaluepair
	COMMA: REDUCE keyvaluepairs = keyvaluepair
69:	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
	COMMA: REDUCE expressions = expression
	RBRACK: REDUCE expressions = expression
70:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 72
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 71
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 17
	StatementMarkupStatement: SHIFT; goto 21
71:	IDCON: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	LBRACE: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	IF: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	EACH: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	LET: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	COMMENT: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	ECHO: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	CDATA: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	YIELD: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	END: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	RBRACE: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
	IN: REDUCE StatementEach = EACH LPAREN var COLON expression RPAREN statement
72:	IDCON: SHIFT; goto 106
	LBRACE: SHIFT; goto 127
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	PRETEXT: SHIFT; goto 96
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 76
	markup: SHIFT; goto 73
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 74
	StatementBlock: SHIFT; goto 172
	StatementCData: SHIFT; goto 173
	StatementYield: SHIFT; goto 174
	StatementComment: SHIFT; goto 175
	StatementEchoExpression: SHIFT; goto 176
	StatementEchoEmbedding: SHIFT; goto 177
	StatementLet: SHIFT; goto 178
	StatementIf: SHIFT; goto 124
	StatementIfElse: SHIFT; goto 125
	StatementEach: SHIFT; goto 126
	embedding: SHIFT; goto 78
	StatementWithoutMarkup: SHIFT; goto 80
	StatementWithoutSubAndMarkup: SHIFT; goto 123
73:	IDCON: REDUCE lst$markup = lst$markup markup
	LBRACE: REDUCE lst$markup = lst$markup markup
	IF: REDUCE lst$markup = lst$markup markup
	EACH: REDUCE lst$markup = lst$markup markup
	LET: REDUCE lst$markup = lst$markup markup
	COMMENT: REDUCE lst$markup = lst$markup markup
	ECHO: REDUCE lst$markup = lst$markup markup
	CDATA: REDUCE lst$markup = lst$markup markup
	YIELD: REDUCE lst$markup = lst$markup markup
	NATCON: REDUCE lst$markup = lst$markup markup
	LBRACK: REDUCE lst$markup = lst$markup markup
	TEXT: REDUCE lst$markup = lst$markup markup
	SYMBOLCON: REDUCE lst$markup = lst$markup markup
	PRETEXT: REDUCE lst$markup = lst$markup markup
74:	IDCON: REDUCE markup = markupWithArguments
	LBRACE: REDUCE markup = markupWithArguments
	IF: REDUCE markup = markupWithArguments
	EACH: REDUCE markup = markupWithArguments
	LET: REDUCE markup = markupWithArguments
	COMMENT: REDUCE markup = markupWithArguments
	ECHO: REDUCE markup = markupWithArguments
	CDATA: REDUCE markup = markupWithArguments
	YIELD: REDUCE markup = markupWithArguments
	NATCON: REDUCE markup = markupWithArguments
	LBRACK: REDUCE markup = markupWithArguments
	TEXT: REDUCE markup = markupWithArguments
	SYMBOLCON: REDUCE markup = markupWithArguments
	SEMICOLON: SHIFT; goto 75
	PRETEXT: REDUCE markup = markupWithArguments
75:	IDCON: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	LBRACE: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	IF: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	EACH: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	LET: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	COMMENT: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	ECHO: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	CDATA: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	YIELD: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	END: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	RBRACE: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	IN: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
	ELSE: REDUCE StatementMarkup = lst$markup.s markupWithArguments.m SEMICOLON
76:	SEMICOLON: SHIFT; goto 77
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
77:	IDCON: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	LBRACE: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	IF: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	EACH: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	LET: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	COMMENT: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	ECHO: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	CDATA: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	YIELD: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	END: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	RBRACE: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	IN: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
	ELSE: REDUCE StatementMarkup = lst$markup.s expression.e SEMICOLON
78:	SEMICOLON: SHIFT; goto 79
79:	IDCON: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	LBRACE: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	IF: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	EACH: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	LET: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	COMMENT: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	ECHO: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	CDATA: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	YIELD: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	END: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	RBRACE: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	IN: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
	ELSE: REDUCE StatementMarkup = lst$markup.s embedding.e SEMICOLON
80:	IDCON: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	LBRACE: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	IF: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	EACH: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	LET: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	COMMENT: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	ECHO: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	CDATA: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	YIELD: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	END: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	RBRACE: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
	IN: REDUCE StatementMarkupStatement = lst$markup.m StatementWithoutMarkup.s
81:	IDCON: REDUCE markup = designator.d
	LBRACE: REDUCE markup = designator.d
	IF: REDUCE markup = designator.d
	EACH: REDUCE markup = designator.d
	LET: REDUCE markup = designator.d
	COMMENT: REDUCE markup = designator.d
	ECHO: REDUCE markup = designator.d
	CDATA: REDUCE markup = designator.d
	YIELD: REDUCE markup = designator.d
	END: REDUCE markup = designator.d
	NATCON: REDUCE markup = designator.d
	LBRACK: REDUCE markup = designator.d
	TEXT: REDUCE markup = designator.d
	SYMBOLCON: REDUCE markup = designator.d
	SEMICOLON: REDUCE markup = designator.d
	FILENAME: REDUCE markup = designator.d
	PRETEXT: REDUCE markup = designator.d
	DIRNAME: REDUCE markup = designator.d
	LPAREN: SHIFT; goto 83
	arguments: SHIFT; goto 82
82:	IDCON: REDUCE markupWithArguments = designator.d arguments.a
	LBRACE: REDUCE markupWithArguments = designator.d arguments.a
	IF: REDUCE markupWithArguments = designator.d arguments.a
	EACH: REDUCE markupWithArguments = designator.d arguments.a
	LET: REDUCE markupWithArguments = designator.d arguments.a
	COMMENT: REDUCE markupWithArguments = designator.d arguments.a
	ECHO: REDUCE markupWithArguments = designator.d arguments.a
	CDATA: REDUCE markupWithArguments = designator.d arguments.a
	YIELD: REDUCE markupWithArguments = designator.d arguments.a
	END: REDUCE markupWithArguments = designator.d arguments.a
	NATCON: REDUCE markupWithArguments = designator.d arguments.a
	LBRACK: REDUCE markupWithArguments = designator.d arguments.a
	TEXT: REDUCE markupWithArguments = designator.d arguments.a
	SYMBOLCON: REDUCE markupWithArguments = designator.d arguments.a
	SEMICOLON: REDUCE markupWithArguments = designator.d arguments.a
	FILENAME: REDUCE markupWithArguments = designator.d arguments.a
	PRETEXT: REDUCE markupWithArguments = designator.d arguments.a
	DIRNAME: REDUCE markupWithArguments = designator.d arguments.a
83:	IDCON: SHIFT; goto 91
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	RPAREN: REDUCE opt$lst$argumentlist = 
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 94
	argumentlist: SHIFT; goto 95
	argument: SHIFT; goto 88
	lst$argumentlist: SHIFT; goto 86
	opt$lst$argumentlist: SHIFT; goto 84
84:	RPAREN: SHIFT; goto 85
85:	IDCON: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	LBRACE: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	IF: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	EACH: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	LET: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	COMMENT: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	ECHO: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	CDATA: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	YIELD: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	END: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	NATCON: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	LBRACK: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	TEXT: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	SYMBOLCON: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	SEMICOLON: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	FILENAME: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	PRETEXT: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
	DIRNAME: REDUCE arguments = LPAREN opt$lst$argumentlist.a RPAREN
86:	IDCON: SHIFT; goto 91
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	RPAREN: REDUCE opt$lst$argumentlist = lst$argumentlist
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 94
	argumentlist: SHIFT; goto 87
	argument: SHIFT; goto 88
87:	IDCON: REDUCE lst$argumentlist = lst$argumentlist argumentlist
	LBRACE: REDUCE lst$argumentlist = lst$argumentlist argumentlist
	NATCON: REDUCE lst$argumentlist = lst$argumentlist argumentlist
	LBRACK: REDUCE lst$argumentlist = lst$argumentlist argumentlist
	TEXT: REDUCE lst$argumentlist = lst$argumentlist argumentlist
	SYMBOLCON: REDUCE lst$argumentlist = lst$argumentlist argumentlist
	RPAREN: REDUCE lst$argumentlist = lst$argumentlist argumentlist
88:	IDCON: REDUCE argumentlist = argument
	LBRACE: REDUCE argumentlist = argument
	NATCON: REDUCE argumentlist = argument
	LBRACK: REDUCE argumentlist = argument
	TEXT: REDUCE argumentlist = argument
	SYMBOLCON: REDUCE argumentlist = argument
	RPAREN: REDUCE argumentlist = argument
	COMMA: SHIFT; goto 89
89:	IDCON: SHIFT; goto 91
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 94
	argumentlist: SHIFT; goto 90
	argument: SHIFT; goto 88
90:	IDCON: REDUCE argumentlist = argument COMMA argumentlist
	LBRACE: REDUCE argumentlist = argument COMMA argumentlist
	NATCON: REDUCE argumentlist = argument COMMA argumentlist
	LBRACK: REDUCE argumentlist = argument COMMA argumentlist
	TEXT: REDUCE argumentlist = argument COMMA argumentlist
	SYMBOLCON: REDUCE argumentlist = argument COMMA argumentlist
	RPAREN: REDUCE argumentlist = argument COMMA argumentlist
91:	IDCON: REDUCE var = IDCON.i
	LBRACE: REDUCE var = IDCON.i
	NATCON: REDUCE var = IDCON.i
	LBRACK: REDUCE var = IDCON.i
	TEXT: REDUCE var = IDCON.i
	SYMBOLCON: REDUCE var = IDCON.i
	RPAREN: REDUCE var = IDCON.i
	DOT: REDUCE var = IDCON.i
	PLUS: REDUCE var = IDCON.i
	COMMA: REDUCE var = IDCON.i
	EQ: SHIFT; goto 92
92:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 93
93:	IDCON: REDUCE argument = IDCON.i EQ expression.e
	LBRACE: REDUCE argument = IDCON.i EQ expression.e
	NATCON: REDUCE argument = IDCON.i EQ expression.e
	LBRACK: REDUCE argument = IDCON.i EQ expression.e
	TEXT: REDUCE argument = IDCON.i EQ expression.e
	SYMBOLCON: REDUCE argument = IDCON.i EQ expression.e
	RPAREN: REDUCE argument = IDCON.i EQ expression.e
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
	COMMA: REDUCE argument = IDCON.i EQ expression.e
94:	IDCON: REDUCE argument = expression
	LBRACE: REDUCE argument = expression
	NATCON: REDUCE argument = expression
	LBRACK: REDUCE argument = expression
	TEXT: REDUCE argument = expression
	SYMBOLCON: REDUCE argument = expression
	RPAREN: REDUCE argument = expression
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
	COMMA: REDUCE argument = expression
95:	IDCON: REDUCE lst$argumentlist = argumentlist
	LBRACE: REDUCE lst$argumentlist = argumentlist
	NATCON: REDUCE lst$argumentlist = argumentlist
	LBRACK: REDUCE lst$argumentlist = argumentlist
	TEXT: REDUCE lst$argumentlist = argumentlist
	SYMBOLCON: REDUCE lst$argumentlist = argumentlist
	RPAREN: REDUCE lst$argumentlist = argumentlist
96:	IDCON: SHIFT; goto 106
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 121
	markup: SHIFT; goto 122
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 103
	embed: SHIFT; goto 97
97:	MIDTEXT: SHIFT; goto 99
	POSTTEXT: SHIFT; goto 102
	texttail: SHIFT; goto 98
98:	SEMICOLON: REDUCE embedding = PRETEXT.p embed.e texttail.t
99:	IDCON: SHIFT; goto 106
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 121
	markup: SHIFT; goto 122
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 103
	embed: SHIFT; goto 100
100:	MIDTEXT: SHIFT; goto 99
	POSTTEXT: SHIFT; goto 102
	texttail: SHIFT; goto 101
101:	SEMICOLON: REDUCE texttail = MIDTEXT.m embed.e texttail.t
102:	SEMICOLON: REDUCE texttail = POSTTEXT.p
103:	IDCON: SHIFT; goto 106
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 104
	markup: SHIFT; goto 73
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
104:	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
	MIDTEXT: REDUCE embed = lst$markup.m expression.e
	POSTTEXT: REDUCE embed = lst$markup.m expression.e
105:	IDCON: REDUCE markup = markupWithArguments
	LBRACE: REDUCE markup = markupWithArguments
	IF: REDUCE markup = markupWithArguments
	EACH: REDUCE markup = markupWithArguments
	LET: REDUCE markup = markupWithArguments
	COMMENT: REDUCE markup = markupWithArguments
	ECHO: REDUCE markup = markupWithArguments
	CDATA: REDUCE markup = markupWithArguments
	YIELD: REDUCE markup = markupWithArguments
	END: REDUCE markup = markupWithArguments
	NATCON: REDUCE markup = markupWithArguments
	LBRACK: REDUCE markup = markupWithArguments
	TEXT: REDUCE markup = markupWithArguments
	SYMBOLCON: REDUCE markup = markupWithArguments
	SEMICOLON: REDUCE markup = markupWithArguments
	FILENAME: REDUCE markup = markupWithArguments
	PRETEXT: REDUCE markup = markupWithArguments
	DIRNAME: REDUCE markup = markupWithArguments
106:	IDCON: REDUCE opt$lst$attribute = 
	LBRACE: REDUCE opt$lst$attribute = 
	IF: REDUCE opt$lst$attribute = 
	EACH: REDUCE opt$lst$attribute = 
	LET: REDUCE opt$lst$attribute = 
	COMMENT: REDUCE opt$lst$attribute = 
	ECHO: REDUCE opt$lst$attribute = 
	CDATA: REDUCE opt$lst$attribute = 
	YIELD: REDUCE opt$lst$attribute = 
	NATCON: REDUCE opt$lst$attribute = 
	LBRACK: REDUCE opt$lst$attribute = 
	TEXT: REDUCE opt$lst$attribute = 
	SYMBOLCON: REDUCE opt$lst$attribute = 
	SEMICOLON: REDUCE var = IDCON.i
	DOT: REDUCE var = IDCON.i
	PLUS: REDUCE var = IDCON.i
	PRETEXT: REDUCE opt$lst$attribute = 
	LPAREN: REDUCE opt$lst$attribute = 
	COLON: SHIFT; goto 114
	MIDTEXT: REDUCE var = IDCON.i
	POSTTEXT: REDUCE var = IDCON.i
	ADDCHAR: SHIFT; goto 116
	HASH: SHIFT; goto 110
	DOLLAR: SHIFT; goto 112
	attribute: SHIFT; goto 120
	lst$attribute: SHIFT; goto 108
	opt$lst$attribute: SHIFT; goto 107
107:	IDCON: REDUCE designator = IDCON.i opt$lst$attribute.a
	LBRACE: REDUCE designator = IDCON.i opt$lst$attribute.a
	IF: REDUCE designator = IDCON.i opt$lst$attribute.a
	EACH: REDUCE designator = IDCON.i opt$lst$attribute.a
	LET: REDUCE designator = IDCON.i opt$lst$attribute.a
	COMMENT: REDUCE designator = IDCON.i opt$lst$attribute.a
	ECHO: REDUCE designator = IDCON.i opt$lst$attribute.a
	CDATA: REDUCE designator = IDCON.i opt$lst$attribute.a
	YIELD: REDUCE designator = IDCON.i opt$lst$attribute.a
	END: REDUCE designator = IDCON.i opt$lst$attribute.a
	NATCON: REDUCE designator = IDCON.i opt$lst$attribute.a
	LBRACK: REDUCE designator = IDCON.i opt$lst$attribute.a
	TEXT: REDUCE designator = IDCON.i opt$lst$attribute.a
	SYMBOLCON: REDUCE designator = IDCON.i opt$lst$attribute.a
	SEMICOLON: REDUCE designator = IDCON.i opt$lst$attribute.a
	FILENAME: REDUCE designator = IDCON.i opt$lst$attribute.a
	PRETEXT: REDUCE designator = IDCON.i opt$lst$attribute.a
	DIRNAME: REDUCE designator = IDCON.i opt$lst$attribute.a
	LPAREN: REDUCE designator = IDCON.i opt$lst$attribute.a
108:	IDCON: REDUCE opt$lst$attribute = lst$attribute
	LBRACE: REDUCE opt$lst$attribute = lst$attribute
	IF: REDUCE opt$lst$attribute = lst$attribute
	EACH: REDUCE opt$lst$attribute = lst$attribute
	LET: REDUCE opt$lst$attribute = lst$attribute
	COMMENT: REDUCE opt$lst$attribute = lst$attribute
	ECHO: REDUCE opt$lst$attribute = lst$attribute
	CDATA: REDUCE opt$lst$attribute = lst$attribute
	YIELD: REDUCE opt$lst$attribute = lst$attribute
	END: REDUCE opt$lst$attribute = lst$attribute
	NATCON: REDUCE opt$lst$attribute = lst$attribute
	LBRACK: REDUCE opt$lst$attribute = lst$attribute
	TEXT: REDUCE opt$lst$attribute = lst$attribute
	SYMBOLCON: REDUCE opt$lst$attribute = lst$attribute
	SEMICOLON: REDUCE opt$lst$attribute = lst$attribute
	FILENAME: REDUCE opt$lst$attribute = lst$attribute
	PRETEXT: REDUCE opt$lst$attribute = lst$attribute
	DIRNAME: REDUCE opt$lst$attribute = lst$attribute
	LPAREN: REDUCE opt$lst$attribute = lst$attribute
	COLON: SHIFT; goto 114
	ADDCHAR: SHIFT; goto 116
	HASH: SHIFT; goto 110
	DOLLAR: SHIFT; goto 112
	attribute: SHIFT; goto 109
109:	IDCON: REDUCE lst$attribute = lst$attribute attribute
	LBRACE: REDUCE lst$attribute = lst$attribute attribute
	IF: REDUCE lst$attribute = lst$attribute attribute
	EACH: REDUCE lst$attribute = lst$attribute attribute
	LET: REDUCE lst$attribute = lst$attribute attribute
	COMMENT: REDUCE lst$attribute = lst$attribute attribute
	ECHO: REDUCE lst$attribute = lst$attribute attribute
	CDATA: REDUCE lst$attribute = lst$attribute attribute
	YIELD: REDUCE lst$attribute = lst$attribute attribute
	END: REDUCE lst$attribute = lst$attribute attribute
	NATCON: REDUCE lst$attribute = lst$attribute attribute
	LBRACK: REDUCE lst$attribute = lst$attribute attribute
	TEXT: REDUCE lst$attribute = lst$attribute attribute
	SYMBOLCON: REDUCE lst$attribute = lst$attribute attribute
	SEMICOLON: REDUCE lst$attribute = lst$attribute attribute
	FILENAME: REDUCE lst$attribute = lst$attribute attribute
	PRETEXT: REDUCE lst$attribute = lst$attribute attribute
	DIRNAME: REDUCE lst$attribute = lst$attribute attribute
	LPAREN: REDUCE lst$attribute = lst$attribute attribute
	COLON: REDUCE lst$attribute = lst$attribute attribute
	ADDCHAR: REDUCE lst$attribute = lst$attribute attribute
	HASH: REDUCE lst$attribute = lst$attribute attribute
	DOLLAR: REDUCE lst$attribute = lst$attribute attribute
110:	IDCON: SHIFT; goto 111
111:	IDCON: REDUCE attribute = HASH IDCON.i
	LBRACE: REDUCE attribute = HASH IDCON.i
	IF: REDUCE attribute = HASH IDCON.i
	EACH: REDUCE attribute = HASH IDCON.i
	LET: REDUCE attribute = HASH IDCON.i
	COMMENT: REDUCE attribute = HASH IDCON.i
	ECHO: REDUCE attribute = HASH IDCON.i
	CDATA: REDUCE attribute = HASH IDCON.i
	YIELD: REDUCE attribute = HASH IDCON.i
	END: REDUCE attribute = HASH IDCON.i
	NATCON: REDUCE attribute = HASH IDCON.i
	LBRACK: REDUCE attribute = HASH IDCON.i
	TEXT: REDUCE attribute = HASH IDCON.i
	SYMBOLCON: REDUCE attribute = HASH IDCON.i
	SEMICOLON: REDUCE attribute = HASH IDCON.i
	FILENAME: REDUCE attribute = HASH IDCON.i
	PRETEXT: REDUCE attribute = HASH IDCON.i
	DIRNAME: REDUCE attribute = HASH IDCON.i
	LPAREN: REDUCE attribute = HASH IDCON.i
	COLON: REDUCE attribute = HASH IDCON.i
	ADDCHAR: REDUCE attribute = HASH IDCON.i
	HASH: REDUCE attribute = HASH IDCON.i
	DOLLAR: REDUCE attribute = HASH IDCON.i
112:	IDCON: SHIFT; goto 113
113:	IDCON: REDUCE attribute = DOLLAR IDCON.i
	LBRACE: REDUCE attribute = DOLLAR IDCON.i
	IF: REDUCE attribute = DOLLAR IDCON.i
	EACH: REDUCE attribute = DOLLAR IDCON.i
	LET: REDUCE attribute = DOLLAR IDCON.i
	COMMENT: REDUCE attribute = DOLLAR IDCON.i
	ECHO: REDUCE attribute = DOLLAR IDCON.i
	CDATA: REDUCE attribute = DOLLAR IDCON.i
	YIELD: REDUCE attribute = DOLLAR IDCON.i
	END: REDUCE attribute = DOLLAR IDCON.i
	NATCON: REDUCE attribute = DOLLAR IDCON.i
	LBRACK: REDUCE attribute = DOLLAR IDCON.i
	TEXT: REDUCE attribute = DOLLAR IDCON.i
	SYMBOLCON: REDUCE attribute = DOLLAR IDCON.i
	SEMICOLON: REDUCE attribute = DOLLAR IDCON.i
	FILENAME: REDUCE attribute = DOLLAR IDCON.i
	PRETEXT: REDUCE attribute = DOLLAR IDCON.i
	DIRNAME: REDUCE attribute = DOLLAR IDCON.i
	LPAREN: REDUCE attribute = DOLLAR IDCON.i
	COLON: REDUCE attribute = DOLLAR IDCON.i
	ADDCHAR: REDUCE attribute = DOLLAR IDCON.i
	HASH: REDUCE attribute = DOLLAR IDCON.i
	DOLLAR: REDUCE attribute = DOLLAR IDCON.i
114:	IDCON: SHIFT; goto 115
115:	IDCON: REDUCE attribute = COLON IDCON.i
	LBRACE: REDUCE attribute = COLON IDCON.i
	IF: REDUCE attribute = COLON IDCON.i
	EACH: REDUCE attribute = COLON IDCON.i
	LET: REDUCE attribute = COLON IDCON.i
	COMMENT: REDUCE attribute = COLON IDCON.i
	ECHO: REDUCE attribute = COLON IDCON.i
	CDATA: REDUCE attribute = COLON IDCON.i
	YIELD: REDUCE attribute = COLON IDCON.i
	END: REDUCE attribute = COLON IDCON.i
	NATCON: REDUCE attribute = COLON IDCON.i
	LBRACK: REDUCE attribute = COLON IDCON.i
	TEXT: REDUCE attribute = COLON IDCON.i
	SYMBOLCON: REDUCE attribute = COLON IDCON.i
	SEMICOLON: REDUCE attribute = COLON IDCON.i
	FILENAME: REDUCE attribute = COLON IDCON.i
	PRETEXT: REDUCE attribute = COLON IDCON.i
	DIRNAME: REDUCE attribute = COLON IDCON.i
	LPAREN: REDUCE attribute = COLON IDCON.i
	COLON: REDUCE attribute = COLON IDCON.i
	ADDCHAR: REDUCE attribute = COLON IDCON.i
	HASH: REDUCE attribute = COLON IDCON.i
	DOLLAR: REDUCE attribute = COLON IDCON.i
116:	NATCON: SHIFT; goto 117
117:	IDCON: REDUCE attribute = ADDCHAR NATCON.w
	LBRACE: REDUCE attribute = ADDCHAR NATCON.w
	IF: REDUCE attribute = ADDCHAR NATCON.w
	EACH: REDUCE attribute = ADDCHAR NATCON.w
	LET: REDUCE attribute = ADDCHAR NATCON.w
	COMMENT: REDUCE attribute = ADDCHAR NATCON.w
	ECHO: REDUCE attribute = ADDCHAR NATCON.w
	CDATA: REDUCE attribute = ADDCHAR NATCON.w
	YIELD: REDUCE attribute = ADDCHAR NATCON.w
	END: REDUCE attribute = ADDCHAR NATCON.w
	NATCON: REDUCE attribute = ADDCHAR NATCON.w
	LBRACK: REDUCE attribute = ADDCHAR NATCON.w
	TEXT: REDUCE attribute = ADDCHAR NATCON.w
	SYMBOLCON: REDUCE attribute = ADDCHAR NATCON.w
	SEMICOLON: REDUCE attribute = ADDCHAR NATCON.w
	FILENAME: REDUCE attribute = ADDCHAR NATCON.w
	PRETEXT: REDUCE attribute = ADDCHAR NATCON.w
	DIRNAME: REDUCE attribute = ADDCHAR NATCON.w
	LPAREN: REDUCE attribute = ADDCHAR NATCON.w
	COLON: REDUCE attribute = ADDCHAR NATCON.w
	ADDCHAR: REDUCE attribute = ADDCHAR NATCON.w
	HASH: REDUCE attribute = ADDCHAR NATCON.w
	DOLLAR: REDUCE attribute = ADDCHAR NATCON.w
	MOD: SHIFT; goto 118
118:	NATCON: SHIFT; goto 119
119:	IDCON: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	LBRACE: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	IF: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	EACH: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	LET: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	COMMENT: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	ECHO: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	CDATA: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	YIELD: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	END: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	NATCON: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	LBRACK: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	TEXT: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	SYMBOLCON: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	SEMICOLON: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	FILENAME: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	PRETEXT: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	DIRNAME: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	LPAREN: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	COLON: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	ADDCHAR: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	HASH: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
	DOLLAR: REDUCE attribute = ADDCHAR NATCON.w MOD NATCON.h
120:	IDCON: REDUCE lst$attribute = attribute
	LBRACE: REDUCE lst$attribute = attribute
	IF: REDUCE lst$attribute = attribute
	EACH: REDUCE lst$attribute = attribute
	LET: REDUCE lst$attribute = attribute
	COMMENT: REDUCE lst$attribute = attribute
	ECHO: REDUCE lst$attribute = attribute
	CDATA: REDUCE lst$attribute = attribute
	YIELD: REDUCE lst$attribute = attribute
	END: REDUCE lst$attribute = attribute
	NATCON: REDUCE lst$attribute = attribute
	LBRACK: REDUCE lst$attribute = attribute
	TEXT: REDUCE lst$attribute = attribute
	SYMBOLCON: REDUCE lst$attribute = attribute
	SEMICOLON: REDUCE lst$attribute = attribute
	FILENAME: REDUCE lst$attribute = attribute
	PRETEXT: REDUCE lst$attribute = attribute
	DIRNAME: REDUCE lst$attribute = attribute
	LPAREN: REDUCE lst$attribute = attribute
	COLON: REDUCE lst$attribute = attribute
	ADDCHAR: REDUCE lst$attribute = attribute
	HASH: REDUCE lst$attribute = attribute
	DOLLAR: REDUCE lst$attribute = attribute
121:	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
	MIDTEXT: REDUCE embed = expression.e
	POSTTEXT: REDUCE embed = expression.e
122:	IDCON: REDUCE lst$markup = markup
	LBRACE: REDUCE lst$markup = markup
	NATCON: REDUCE lst$markup = markup
	LBRACK: REDUCE lst$markup = markup
	TEXT: REDUCE lst$markup = markup
	SYMBOLCON: REDUCE lst$markup = markup
123:	IDCON: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	LBRACE: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	IF: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	EACH: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	LET: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	COMMENT: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	ECHO: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	CDATA: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	YIELD: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	END: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	RBRACE: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	IN: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
124:	IDCON: REDUCE StatementWithoutMarkup = StatementIf
	LBRACE: REDUCE StatementWithoutMarkup = StatementIf
	IF: REDUCE StatementWithoutMarkup = StatementIf
	EACH: REDUCE StatementWithoutMarkup = StatementIf
	LET: REDUCE StatementWithoutMarkup = StatementIf
	COMMENT: REDUCE StatementWithoutMarkup = StatementIf
	ECHO: REDUCE StatementWithoutMarkup = StatementIf
	CDATA: REDUCE StatementWithoutMarkup = StatementIf
	YIELD: REDUCE StatementWithoutMarkup = StatementIf
	END: REDUCE StatementWithoutMarkup = StatementIf
	RBRACE: REDUCE StatementWithoutMarkup = StatementIf
	IN: REDUCE StatementWithoutMarkup = StatementIf
125:	IDCON: REDUCE StatementWithoutMarkup = StatementIfElse
	LBRACE: REDUCE StatementWithoutMarkup = StatementIfElse
	IF: REDUCE StatementWithoutMarkup = StatementIfElse
	EACH: REDUCE StatementWithoutMarkup = StatementIfElse
	LET: REDUCE StatementWithoutMarkup = StatementIfElse
	COMMENT: REDUCE StatementWithoutMarkup = StatementIfElse
	ECHO: REDUCE StatementWithoutMarkup = StatementIfElse
	CDATA: REDUCE StatementWithoutMarkup = StatementIfElse
	YIELD: REDUCE StatementWithoutMarkup = StatementIfElse
	END: REDUCE StatementWithoutMarkup = StatementIfElse
	RBRACE: REDUCE StatementWithoutMarkup = StatementIfElse
	IN: REDUCE StatementWithoutMarkup = StatementIfElse
126:	IDCON: REDUCE StatementWithoutMarkup = StatementEach
	LBRACE: REDUCE StatementWithoutMarkup = StatementEach
	IF: REDUCE StatementWithoutMarkup = StatementEach
	EACH: REDUCE StatementWithoutMarkup = StatementEach
	LET: REDUCE StatementWithoutMarkup = StatementEach
	COMMENT: REDUCE StatementWithoutMarkup = StatementEach
	ECHO: REDUCE StatementWithoutMarkup = StatementEach
	CDATA: REDUCE StatementWithoutMarkup = StatementEach
	YIELD: REDUCE StatementWithoutMarkup = StatementEach
	END: REDUCE StatementWithoutMarkup = StatementEach
	RBRACE: REDUCE StatementWithoutMarkup = StatementEach
	IN: REDUCE StatementWithoutMarkup = StatementEach
127:	IDCON: SHIFT; goto 130
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	RBRACE: REDUCE opt$lst$statement = 
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 72
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 133
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 17
	StatementMarkupStatement: SHIFT; goto 21
	lst$statement: SHIFT; goto 15
	opt$lst$statement: SHIFT; goto 128
	keyvaluepair: SHIFT; goto 68
	keyvaluepairs: SHIFT; goto 58
128:	RBRACE: SHIFT; goto 129
129:	IDCON: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	LBRACE: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	IF: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	EACH: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	LET: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	COMMENT: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	ECHO: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	CDATA: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	YIELD: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	END: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	RBRACE: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	IN: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
	ELSE: REDUCE StatementBlock = LBRACE opt$lst$statement.s RBRACE
130:	IDCON: REDUCE opt$lst$attribute = 
	LBRACE: REDUCE opt$lst$attribute = 
	IF: REDUCE opt$lst$attribute = 
	EACH: REDUCE opt$lst$attribute = 
	LET: REDUCE opt$lst$attribute = 
	COMMENT: REDUCE opt$lst$attribute = 
	ECHO: REDUCE opt$lst$attribute = 
	CDATA: REDUCE opt$lst$attribute = 
	YIELD: REDUCE opt$lst$attribute = 
	NATCON: REDUCE opt$lst$attribute = 
	LBRACK: REDUCE opt$lst$attribute = 
	TEXT: REDUCE opt$lst$attribute = 
	SYMBOLCON: REDUCE opt$lst$attribute = 
	SEMICOLON: REDUCE opt$lst$attribute = 
	PRETEXT: REDUCE opt$lst$attribute = 
	LPAREN: REDUCE opt$lst$attribute = 
	COLON: SHIFT; goto 131
	ADDCHAR: SHIFT; goto 116
	HASH: SHIFT; goto 110
	DOLLAR: SHIFT; goto 112
	attribute: SHIFT; goto 120
	lst$attribute: SHIFT; goto 108
	opt$lst$attribute: SHIFT; goto 107
131:	IDCON: SHIFT; goto 132
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 64
132:	IDCON: REDUCE attribute = COLON IDCON.i
	LBRACE: REDUCE attribute = COLON IDCON.i
	IF: REDUCE attribute = COLON IDCON.i
	EACH: REDUCE attribute = COLON IDCON.i
	LET: REDUCE attribute = COLON IDCON.i
	COMMENT: REDUCE attribute = COLON IDCON.i
	ECHO: REDUCE attribute = COLON IDCON.i
	CDATA: REDUCE attribute = COLON IDCON.i
	YIELD: REDUCE attribute = COLON IDCON.i
	NATCON: REDUCE attribute = COLON IDCON.i
	RBRACE: REDUCE var = IDCON.i
	LBRACK: REDUCE attribute = COLON IDCON.i
	TEXT: REDUCE attribute = COLON IDCON.i
	SYMBOLCON: REDUCE attribute = COLON IDCON.i
	SEMICOLON: REDUCE attribute = COLON IDCON.i
	DOT: REDUCE var = IDCON.i
	PLUS: REDUCE var = IDCON.i
	COMMA: REDUCE var = IDCON.i
	PRETEXT: REDUCE attribute = COLON IDCON.i
	LPAREN: REDUCE attribute = COLON IDCON.i
	COLON: REDUCE attribute = COLON IDCON.i
	ADDCHAR: REDUCE attribute = COLON IDCON.i
	HASH: REDUCE attribute = COLON IDCON.i
	DOLLAR: REDUCE attribute = COLON IDCON.i
133:	IDCON: REDUCE lst$statement = statement
	LBRACE: REDUCE lst$statement = statement
	IF: REDUCE lst$statement = statement
	EACH: REDUCE lst$statement = statement
	LET: REDUCE lst$statement = statement
	COMMENT: REDUCE lst$statement = statement
	ECHO: REDUCE lst$statement = statement
	CDATA: REDUCE lst$statement = statement
	YIELD: REDUCE lst$statement = statement
	END: REDUCE lst$statement = statement
	RBRACE: REDUCE lst$statement = statement
134:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	RBRACE: REDUCE opt$lst$statement = 
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 72
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 133
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 17
	StatementMarkupStatement: SHIFT; goto 21
	lst$statement: SHIFT; goto 15
	opt$lst$statement: SHIFT; goto 128
135:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 136
136:	SEMICOLON: SHIFT; goto 137
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
137:	IDCON: REDUCE StatementCData = CDATA expression.e SEMICOLON
	LBRACE: REDUCE StatementCData = CDATA expression.e SEMICOLON
	IF: REDUCE StatementCData = CDATA expression.e SEMICOLON
	EACH: REDUCE StatementCData = CDATA expression.e SEMICOLON
	LET: REDUCE StatementCData = CDATA expression.e SEMICOLON
	COMMENT: REDUCE StatementCData = CDATA expression.e SEMICOLON
	ECHO: REDUCE StatementCData = CDATA expression.e SEMICOLON
	CDATA: REDUCE StatementCData = CDATA expression.e SEMICOLON
	YIELD: REDUCE StatementCData = CDATA expression.e SEMICOLON
	END: REDUCE StatementCData = CDATA expression.e SEMICOLON
	RBRACE: REDUCE StatementCData = CDATA expression.e SEMICOLON
	IN: REDUCE StatementCData = CDATA expression.e SEMICOLON
	ELSE: REDUCE StatementCData = CDATA expression.e SEMICOLON
138:	SEMICOLON: SHIFT; goto 139
139:	IDCON: REDUCE StatementYield = YIELD SEMICOLON
	LBRACE: REDUCE StatementYield = YIELD SEMICOLON
	IF: REDUCE StatementYield = YIELD SEMICOLON
	EACH: REDUCE StatementYield = YIELD SEMICOLON
	LET: REDUCE StatementYield = YIELD SEMICOLON
	COMMENT: REDUCE StatementYield = YIELD SEMICOLON
	ECHO: REDUCE StatementYield = YIELD SEMICOLON
	CDATA: REDUCE StatementYield = YIELD SEMICOLON
	YIELD: REDUCE StatementYield = YIELD SEMICOLON
	END: REDUCE StatementYield = YIELD SEMICOLON
	RBRACE: REDUCE StatementYield = YIELD SEMICOLON
	IN: REDUCE StatementYield = YIELD SEMICOLON
	ELSE: REDUCE StatementYield = YIELD SEMICOLON
140:	STRCON: SHIFT; goto 141
141:	SEMICOLON: SHIFT; goto 142
142:	IDCON: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	LBRACE: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	IF: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	EACH: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	LET: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	COMMENT: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	ECHO: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	CDATA: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	YIELD: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	END: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	RBRACE: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	IN: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
	ELSE: REDUCE StatementComment = COMMENT STRCON.s SEMICOLON
143:	IDCON: REDUCE lst$markup = markup
	LBRACE: REDUCE lst$markup = markup
	IF: REDUCE lst$markup = markup
	EACH: REDUCE lst$markup = markup
	LET: REDUCE lst$markup = markup
	COMMENT: REDUCE lst$markup = markup
	ECHO: REDUCE lst$markup = markup
	CDATA: REDUCE lst$markup = markup
	YIELD: REDUCE lst$markup = markup
	NATCON: REDUCE lst$markup = markup
	LBRACK: REDUCE lst$markup = markup
	TEXT: REDUCE lst$markup = markup
	SYMBOLCON: REDUCE lst$markup = markup
	SEMICOLON: SHIFT; goto 144
	PRETEXT: REDUCE lst$markup = markup
144:	IDCON: REDUCE StatementMarkup = markup.m SEMICOLON
	LBRACE: REDUCE StatementMarkup = markup.m SEMICOLON
	IF: REDUCE StatementMarkup = markup.m SEMICOLON
	EACH: REDUCE StatementMarkup = markup.m SEMICOLON
	LET: REDUCE StatementMarkup = markup.m SEMICOLON
	COMMENT: REDUCE StatementMarkup = markup.m SEMICOLON
	ECHO: REDUCE StatementMarkup = markup.m SEMICOLON
	CDATA: REDUCE StatementMarkup = markup.m SEMICOLON
	YIELD: REDUCE StatementMarkup = markup.m SEMICOLON
	END: REDUCE StatementMarkup = markup.m SEMICOLON
	RBRACE: REDUCE StatementMarkup = markup.m SEMICOLON
	IN: REDUCE StatementMarkup = markup.m SEMICOLON
	ELSE: REDUCE StatementMarkup = markup.m SEMICOLON
145:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	PRETEXT: SHIFT; goto 96
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 146
	embedding: SHIFT; goto 148
146:	SEMICOLON: SHIFT; goto 147
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
147:	IDCON: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	LBRACE: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	IF: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	EACH: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	LET: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	COMMENT: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	ECHO: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	CDATA: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	YIELD: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	END: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	RBRACE: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	IN: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
	ELSE: REDUCE StatementEchoExpression = ECHO expression.e SEMICOLON
148:	SEMICOLON: SHIFT; goto 149
149:	IDCON: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	LBRACE: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	IF: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	EACH: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	LET: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	COMMENT: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	ECHO: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	CDATA: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	YIELD: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	END: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	RBRACE: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	IN: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
	ELSE: REDUCE StatementEchoEmbedding = ECHO embedding.e SEMICOLON
150:	IDCON: SHIFT; goto 157
	assignment: SHIFT; goto 171
	lst$assignment: SHIFT; goto 151
151:	IDCON: SHIFT; goto 157
	IN: SHIFT; goto 153
	assignment: SHIFT; goto 152
152:	IDCON: REDUCE lst$assignment = lst$assignment assignment
	IN: REDUCE lst$assignment = lst$assignment assignment
153:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	END: REDUCE opt$lst$statement = 
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 72
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 133
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 17
	StatementMarkupStatement: SHIFT; goto 21
	lst$statement: SHIFT; goto 15
	opt$lst$statement: SHIFT; goto 154
154:	END: SHIFT; goto 155
155:	IDCON: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	LBRACE: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	IF: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	EACH: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	LET: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	COMMENT: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	ECHO: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	CDATA: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	YIELD: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	END: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	RBRACE: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	IN: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
	ELSE: REDUCE StatementLet = LET lst$assignment.a IN opt$lst$statement.s END
156:	IDCON: REDUCE opt$lst$attribute = 
	LBRACE: REDUCE opt$lst$attribute = 
	IF: REDUCE opt$lst$attribute = 
	EACH: REDUCE opt$lst$attribute = 
	LET: REDUCE opt$lst$attribute = 
	COMMENT: REDUCE opt$lst$attribute = 
	ECHO: REDUCE opt$lst$attribute = 
	CDATA: REDUCE opt$lst$attribute = 
	YIELD: REDUCE opt$lst$attribute = 
	END: REDUCE opt$lst$attribute = 
	NATCON: REDUCE opt$lst$attribute = 
	LBRACK: REDUCE opt$lst$attribute = 
	TEXT: REDUCE opt$lst$attribute = 
	SYMBOLCON: REDUCE opt$lst$attribute = 
	SEMICOLON: REDUCE opt$lst$attribute = 
	FILENAME: REDUCE opt$lst$attribute = 
	PRETEXT: REDUCE opt$lst$attribute = 
	DIRNAME: REDUCE opt$lst$attribute = 
	LPAREN: REDUCE opt$lst$attribute = 
	COLON: SHIFT; goto 114
	ADDCHAR: SHIFT; goto 116
	HASH: SHIFT; goto 110
	DOLLAR: SHIFT; goto 112
	attribute: SHIFT; goto 120
	lst$attribute: SHIFT; goto 108
	opt$lst$attribute: SHIFT; goto 107
157:	LPAREN: SHIFT; goto 164
	EQ: SHIFT; goto 158
	assignmentformals: SHIFT; goto 161
158:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 159
159:	SEMICOLON: SHIFT; goto 160
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
160:	IDCON: REDUCE assignment = IDCON.i EQ expression.e SEMICOLON
	IN: REDUCE assignment = IDCON.i EQ expression.e SEMICOLON
161:	EQ: SHIFT; goto 162
162:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 38
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 72
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 163
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 17
	StatementMarkupStatement: SHIFT; goto 21
163:	IDCON: REDUCE assignment = IDCON.i assignmentformals.f EQ statement.s
	IN: REDUCE assignment = IDCON.i assignmentformals.f EQ statement.s
164:	IDCON: SHIFT; goto 168
	RPAREN: SHIFT; goto 165
	formallist: SHIFT; goto 166
165:	EQ: REDUCE assignmentformals = LPAREN RPAREN
166:	RPAREN: SHIFT; goto 167
167:	EQ: REDUCE assignmentformals = LPAREN formallist.f RPAREN
168:	RPAREN: REDUCE formallist = IDCON.i
	COMMA: SHIFT; goto 169
169:	IDCON: SHIFT; goto 168
	formallist: SHIFT; goto 170
170:	RPAREN: REDUCE formallist = IDCON.a COMMA formallist.b
171:	IDCON: REDUCE lst$assignment = assignment
	IN: REDUCE lst$assignment = assignment
172:	IDCON: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	LBRACE: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	IF: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	EACH: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	LET: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	COMMENT: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	ECHO: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	CDATA: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	YIELD: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	END: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	RBRACE: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	IN: REDUCE StatementWithoutSubAndMarkup = StatementBlock
	ELSE: REDUCE StatementWithoutSubAndMarkup = StatementBlock
173:	IDCON: REDUCE StatementWithoutSubAndMarkup = StatementCData
	LBRACE: REDUCE StatementWithoutSubAndMarkup = StatementCData
	IF: REDUCE StatementWithoutSubAndMarkup = StatementCData
	EACH: REDUCE StatementWithoutSubAndMarkup = StatementCData
	LET: REDUCE StatementWithoutSubAndMarkup = StatementCData
	COMMENT: REDUCE StatementWithoutSubAndMarkup = StatementCData
	ECHO: REDUCE StatementWithoutSubAndMarkup = StatementCData
	CDATA: REDUCE StatementWithoutSubAndMarkup = StatementCData
	YIELD: REDUCE StatementWithoutSubAndMarkup = StatementCData
	END: REDUCE StatementWithoutSubAndMarkup = StatementCData
	RBRACE: REDUCE StatementWithoutSubAndMarkup = StatementCData
	IN: REDUCE StatementWithoutSubAndMarkup = StatementCData
	ELSE: REDUCE StatementWithoutSubAndMarkup = StatementCData
174:	IDCON: REDUCE StatementWithoutSubAndMarkup = StatementYield
	LBRACE: REDUCE StatementWithoutSubAndMarkup = StatementYield
	IF: REDUCE StatementWithoutSubAndMarkup = StatementYield
	EACH: REDUCE StatementWithoutSubAndMarkup = StatementYield
	LET: REDUCE StatementWithoutSubAndMarkup = StatementYield
	COMMENT: REDUCE StatementWithoutSubAndMarkup = StatementYield
	ECHO: REDUCE StatementWithoutSubAndMarkup = StatementYield
	CDATA: REDUCE StatementWithoutSubAndMarkup = StatementYield
	YIELD: REDUCE StatementWithoutSubAndMarkup = StatementYield
	END: REDUCE StatementWithoutSubAndMarkup = StatementYield
	RBRACE: REDUCE StatementWithoutSubAndMarkup = StatementYield
	IN: REDUCE StatementWithoutSubAndMarkup = StatementYield
	ELSE: REDUCE StatementWithoutSubAndMarkup = StatementYield
175:	IDCON: REDUCE StatementWithoutSubAndMarkup = StatementComment
	LBRACE: REDUCE StatementWithoutSubAndMarkup = StatementComment
	IF: REDUCE StatementWithoutSubAndMarkup = StatementComment
	EACH: REDUCE StatementWithoutSubAndMarkup = StatementComment
	LET: REDUCE StatementWithoutSubAndMarkup = StatementComment
	COMMENT: REDUCE StatementWithoutSubAndMarkup = StatementComment
	ECHO: REDUCE StatementWithoutSubAndMarkup = StatementComment
	CDATA: REDUCE StatementWithoutSubAndMarkup = StatementComment
	YIELD: REDUCE StatementWithoutSubAndMarkup = StatementComment
	END: REDUCE StatementWithoutSubAndMarkup = StatementComment
	RBRACE: REDUCE StatementWithoutSubAndMarkup = StatementComment
	IN: REDUCE StatementWithoutSubAndMarkup = StatementComment
	ELSE: REDUCE StatementWithoutSubAndMarkup = StatementComment
176:	IDCON: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	LBRACE: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	IF: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	EACH: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	LET: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	COMMENT: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	ECHO: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	CDATA: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	YIELD: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	END: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	RBRACE: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	IN: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
	ELSE: REDUCE StatementWithoutSubAndMarkup = StatementEchoExpression
177:	IDCON: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	LBRACE: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	IF: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	EACH: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	LET: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	COMMENT: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	ECHO: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	CDATA: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	YIELD: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	END: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	RBRACE: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	IN: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
	ELSE: REDUCE StatementWithoutSubAndMarkup = StatementEchoEmbedding
178:	IDCON: REDUCE StatementWithoutSubAndMarkup = StatementLet
	LBRACE: REDUCE StatementWithoutSubAndMarkup = StatementLet
	IF: REDUCE StatementWithoutSubAndMarkup = StatementLet
	EACH: REDUCE StatementWithoutSubAndMarkup = StatementLet
	LET: REDUCE StatementWithoutSubAndMarkup = StatementLet
	COMMENT: REDUCE StatementWithoutSubAndMarkup = StatementLet
	ECHO: REDUCE StatementWithoutSubAndMarkup = StatementLet
	CDATA: REDUCE StatementWithoutSubAndMarkup = StatementLet
	YIELD: REDUCE StatementWithoutSubAndMarkup = StatementLet
	END: REDUCE StatementWithoutSubAndMarkup = StatementLet
	RBRACE: REDUCE StatementWithoutSubAndMarkup = StatementLet
	IN: REDUCE StatementWithoutSubAndMarkup = StatementLet
	ELSE: REDUCE StatementWithoutSubAndMarkup = StatementLet
179:	IDCON: REDUCE statement = StatementWithoutSubstatement
	LBRACE: REDUCE statement = StatementWithoutSubstatement
	IF: REDUCE statement = StatementWithoutSubstatement
	EACH: REDUCE statement = StatementWithoutSubstatement
	LET: REDUCE statement = StatementWithoutSubstatement
	COMMENT: REDUCE statement = StatementWithoutSubstatement
	ECHO: REDUCE statement = StatementWithoutSubstatement
	CDATA: REDUCE statement = StatementWithoutSubstatement
	YIELD: REDUCE statement = StatementWithoutSubstatement
	END: REDUCE statement = StatementWithoutSubstatement
	RBRACE: REDUCE statement = StatementWithoutSubstatement
	IN: REDUCE statement = StatementWithoutSubstatement
	ELSE: REDUCE StatementNoShortIf = StatementWithoutSubstatement
180:	ELSE: REDUCE StatementNoShortIf = StatementEachNoShortIf
181:	ELSE: REDUCE StatementNoShortIf = StatementMarkupStatementNoShortIf
182:	LPAREN: SHIFT; goto 183
183:	IDCON: SHIFT; goto 65
	var: SHIFT; goto 184
184:	COLON: SHIFT; goto 185
185:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 186
186:	RPAREN: SHIFT; goto 187
	DOT: SHIFT; goto 43
	PLUS: SHIFT; goto 45
187:	IDCON: SHIFT; goto 156
	LBRACE: SHIFT; goto 134
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 182
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	markup: SHIFT; goto 143
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
	lst$markup: SHIFT; goto 189
	StatementBlock: SHIFT; goto 22
	StatementCData: SHIFT; goto 23
	StatementYield: SHIFT; goto 24
	StatementComment: SHIFT; goto 25
	StatementEchoExpression: SHIFT; goto 27
	StatementEchoEmbedding: SHIFT; goto 28
	StatementLet: SHIFT; goto 29
	StatementIf: SHIFT; goto 18
	StatementIfElse: SHIFT; goto 19
	StatementEach: SHIFT; goto 20
	statement: SHIFT; goto 71
	StatementMarkup: SHIFT; goto 26
	StatementWithoutSubstatement: SHIFT; goto 179
	StatementMarkupStatement: SHIFT; goto 21
	StatementEachNoShortIf: SHIFT; goto 180
	StatementNoShortIf: SHIFT; goto 188
	StatementMarkupStatementNoShortIf: SHIFT; goto 181
188:	ELSE: REDUCE StatementEachNoShortIf = EACH LPAREN var COLON expression RPAREN StatementNoShortIf
189:	IDCON: SHIFT; goto 106
	LBRACE: SHIFT; goto 127
	IF: SHIFT; goto 30
	EACH: SHIFT; goto 182
	LET: SHIFT; goto 150
	COMMENT: SHIFT; goto 140
	ECHO: SHIFT; goto 145
	CDATA: SHIFT; goto 135
	YIELD: SHIFT; goto 138
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	PRETEXT: SHIFT; goto 96
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 76
	markup: SHIFT; goto 73
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 74
	StatementBlock: SHIFT; goto 172
	StatementCData: SHIFT; goto 173
	StatementYield: SHIFT; goto 174
	StatementComment: SHIFT; goto 175
	StatementEchoExpression: SHIFT; goto 176
	StatementEchoEmbedding: SHIFT; goto 177
	StatementLet: SHIFT; goto 178
	StatementIf: SHIFT; goto 124
	StatementIfElse: SHIFT; goto 125
	StatementEach: SHIFT; goto 126
	embedding: SHIFT; goto 78
	StatementEachNoShortIf: SHIFT; goto 192
	StatementWithoutMarkup: SHIFT; goto 80
	StatementWithoutSubAndMarkup: SHIFT; goto 191
	StatementWithoutMarkupNoShortIf: SHIFT; goto 190
190:	ELSE: REDUCE StatementMarkupStatementNoShortIf = lst$markup.m StatementWithoutMarkupNoShortIf.s
191:	IDCON: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	LBRACE: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	IF: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	EACH: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	LET: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	COMMENT: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	ECHO: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	CDATA: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	YIELD: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	END: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	RBRACE: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	IN: REDUCE StatementWithoutMarkup = StatementWithoutSubAndMarkup
	ELSE: REDUCE StatementWithoutMarkupNoShortIf = StatementWithoutSubAndMarkup
192:	ELSE: REDUCE StatementWithoutMarkupNoShortIf = StatementEachNoShortIf
193:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	NOT: SHIFT; goto 202
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 195
	simplepredicate: SHIFT; goto 194
194:	RPAREN: REDUCE conjunction = predicate.p ANDAND simplepredicate.q
	ANDAND: REDUCE conjunction = predicate.p ANDAND simplepredicate.q
	OROR: REDUCE conjunction = predicate.p ANDAND simplepredicate.q
195:	RPAREN: REDUCE simplepredicate = expression
	DOT: SHIFT; goto 196
	PLUS: SHIFT; goto 45
	ANDAND: REDUCE simplepredicate = expression
	OROR: REDUCE simplepredicate = expression
196:	IDCON: SHIFT; goto 44
	LIST: SHIFT; goto 199
	RECORD: SHIFT; goto 200
	STRING: SHIFT; goto 201
	type: SHIFT; goto 197
197:	QUESTION: SHIFT; goto 198
198:	RPAREN: REDUCE simplepredicate = expression.e DOT type.t QUESTION
	ANDAND: REDUCE simplepredicate = expression.e DOT type.t QUESTION
	OROR: REDUCE simplepredicate = expression.e DOT type.t QUESTION
199:	QUESTION: REDUCE type = LIST
200:	QUESTION: REDUCE type = RECORD
201:	QUESTION: REDUCE type = STRING
202:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	NOT: SHIFT; goto 202
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 195
	simplepredicate: SHIFT; goto 203
203:	RPAREN: REDUCE simplepredicate = NOT simplepredicate.p
	ANDAND: REDUCE simplepredicate = NOT simplepredicate.p
	OROR: REDUCE simplepredicate = NOT simplepredicate.p
204:	IDCON: SHIFT; goto 65
	LBRACE: SHIFT; goto 57
	NATCON: SHIFT; goto 49
	LBRACK: SHIFT; goto 51
	TEXT: SHIFT; goto 67
	SYMBOLCON: SHIFT; goto 66
	NOT: SHIFT; goto 202
	var: SHIFT; goto 47
	simpleexpression: SHIFT; goto 56
	symbolcon: SHIFT; goto 48
	textexpression: SHIFT; goto 50
	expression: SHIFT; goto 195
	simplepredicate: SHIFT; goto 205
205:	RPAREN: REDUCE predicate = predicate.p OROR simplepredicate.q
	ANDAND: REDUCE predicate = predicate.p OROR simplepredicate.q
	OROR: REDUCE predicate = predicate.p OROR simplepredicate.q
206:	RPAREN: REDUCE predicate = simplepredicate
	ANDAND: REDUCE predicate = simplepredicate
	OROR: REDUCE predicate = simplepredicate
207:	RPAREN: REDUCE predicate = conjunction
	ANDAND: REDUCE predicate = conjunction
	OROR: REDUCE predicate = conjunction
208:	IDCON: SHIFT; goto 168
	formallist: SHIFT; goto 209
209:	RPAREN: SHIFT; goto 210
210:	IDCON: REDUCE formals = LPAREN formallist.f RPAREN
	LBRACE: REDUCE formals = LPAREN formallist.f RPAREN
	IF: REDUCE formals = LPAREN formallist.f RPAREN
	EACH: REDUCE formals = LPAREN formallist.f RPAREN
	LET: REDUCE formals = LPAREN formallist.f RPAREN
	COMMENT: REDUCE formals = LPAREN formallist.f RPAREN
	ECHO: REDUCE formals = LPAREN formallist.f RPAREN
	CDATA: REDUCE formals = LPAREN formallist.f RPAREN
	YIELD: REDUCE formals = LPAREN formallist.f RPAREN
	END: REDUCE formals = LPAREN formallist.f RPAREN
211:	IDCON: SHIFT; goto 216
	moduleid: SHIFT; goto 212
	idcons: SHIFT; goto 213
212:	EOF: REDUCE import = IMPORT moduleid.m
	DEF: REDUCE import = IMPORT moduleid.m
	SITE: REDUCE import = IMPORT moduleid.m
	IMPORT: REDUCE import = IMPORT moduleid.m
213:	EOF: REDUCE moduleid = idcons.i
	DOT: SHIFT; goto 214
	DEF: REDUCE moduleid = idcons.i
	SITE: REDUCE moduleid = idcons.i
	IMPORT: REDUCE moduleid = idcons.i
214:	IDCON: SHIFT; goto 215
215:	EOF: REDUCE idcons = idcons.a DOT IDCON.b
	DOT: REDUCE idcons = idcons.a DOT IDCON.b
	DEF: REDUCE idcons = idcons.a DOT IDCON.b
	SITE: REDUCE idcons = idcons.a DOT IDCON.b
	IMPORT: REDUCE idcons = idcons.a DOT IDCON.b
216:	EOF: REDUCE idcons = IDCON.i
	DOT: REDUCE idcons = IDCON.i
	DEF: REDUCE idcons = IDCON.i
	SITE: REDUCE idcons = IDCON.i
	IMPORT: REDUCE idcons = IDCON.i
217:	END: REDUCE opt$lst$mappings = 
	FILENAME: SHIFT; goto 231
	DIRNAME: SHIFT; goto 228
	mappings: SHIFT; goto 232
	mapping: SHIFT; goto 222
	path: SHIFT; goto 225
	lst$mappings: SHIFT; goto 220
	opt$lst$mappings: SHIFT; goto 218
218:	END: SHIFT; goto 219
219:	EOF: REDUCE site = SITE opt$lst$mappings.m END
	DEF: REDUCE site = SITE opt$lst$mappings.m END
	SITE: REDUCE site = SITE opt$lst$mappings.m END
	IMPORT: REDUCE site = SITE opt$lst$mappings.m END
220:	END: REDUCE opt$lst$mappings = lst$mappings
	FILENAME: SHIFT; goto 231
	DIRNAME: SHIFT; goto 228
	mappings: SHIFT; goto 221
	mapping: SHIFT; goto 222
	path: SHIFT; goto 225
221:	END: REDUCE lst$mappings = lst$mappings mappings
	FILENAME: REDUCE lst$mappings = lst$mappings mappings
	DIRNAME: REDUCE lst$mappings = lst$mappings mappings
222:	END: REDUCE mappings = mapping
	SEMICOLON: SHIFT; goto 223
	FILENAME: REDUCE mappings = mapping
	DIRNAME: REDUCE mappings = mapping
223:	FILENAME: SHIFT; goto 231
	DIRNAME: SHIFT; goto 228
	mappings: SHIFT; goto 224
	mapping: SHIFT; goto 222
	path: SHIFT; goto 225
224:	END: REDUCE mappings = mapping SEMICOLON mappings
	FILENAME: REDUCE mappings = mapping SEMICOLON mappings
	DIRNAME: REDUCE mappings = mapping SEMICOLON mappings
225:	COLON: SHIFT; goto 226
226:	IDCON: SHIFT; goto 156
	markup: SHIFT; goto 227
	designator: SHIFT; goto 81
	markupWithArguments: SHIFT; goto 105
227:	END: REDUCE mapping = path.p COLON markup.m
	SEMICOLON: REDUCE mapping = path.p COLON markup.m
	FILENAME: REDUCE mapping = path.p COLON markup.m
	DIRNAME: REDUCE mapping = path.p COLON markup.m
228:	DIV: SHIFT; goto 229
229:	FILENAME: SHIFT; goto 230
230:	COLON: REDUCE path = DIRNAME.d DIV FILENAME.f
231:	COLON: REDUCE path = FILENAME.f
232:	END: REDUCE lst$mappings = mappings
	FILENAME: REDUCE lst$mappings = mappings
	DIRNAME: REDUCE lst$mappings = mappings
233:	EOF: REDUCE lst$moduleelement = moduleelement
	DEF: REDUCE lst$moduleelement = moduleelement
	SITE: REDUCE lst$moduleelement = moduleelement
	IMPORT: REDUCE lst$moduleelement = moduleelement
