//
// Generated by JTB 1.3.2
//

package WaeberLexer.visitor;
import WaeberLexer.syntaxtree.*;
import java.util.*;

/**
 * Provides default methods which visit each node in the tree in depth-first
 * order.  Your visitors may extend this class.
 */
@SuppressWarnings("all")
public class DepthFirstVisitor implements Visitor {
   //
   // Auto class visitors--probably don't need to be overridden.
   //
   public void visit(NodeList n) {
      for ( Enumeration<Node> e = n.elements(); e.hasMoreElements(); )
         e.nextElement().accept(this);
   }

   public void visit(NodeListOptional n) {
      if ( n.present() )
         for ( Enumeration<Node> e = n.elements(); e.hasMoreElements(); )
            e.nextElement().accept(this);
   }

   public void visit(NodeOptional n) {
      if ( n.present() )
         n.node.accept(this);
   }

   public void visit(NodeSequence n) {
      for ( Enumeration<Node> e = n.elements(); e.hasMoreElements(); )
         e.nextElement().accept(this);
   }

   public void visit(NodeToken n) { }

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> Expression()
    * f1 -> <ENDOFFILE>
    */
   public void visit(Start n) {
      n.f0.accept(this);
      n.f1.accept(this);
   }

   /**
    * f0 -> ( <MODULE> | <SITE> | <END> | <DEF> | <ECHO> | <YIELD> | <EACH> | <IF> | <LET> | <COMMENT> | <CDATA> | <IMPORT> | <IDENTIFIER> | <INTEGER_LITERAL> | <PLUS> | <MINUS> | <IS> | <OPAR> | <CPAR> | <OBRACE> | <CBRACE> | <SLASH> | <DOT> | <COLON> | <QUOTATION> | <SEMICOLON> | <COMMA> | <AMPERSAND> | <FLOATINGPOINT> | <AT> )*
    */
   public void visit(Expression n) {
      n.f0.accept(this);
   }

   /**

    */
   public void visit(AdditiveExpression n) {
   }

   /**

    */
   public void visit(MultiplicativeExpression n) {
   }

   /**

    */
   public void visit(UnaryExpression n) {
   }

   /**

    */
   public void visit(Identifier n) {
   }

   /**

    */
   public void visit(MyInteger n) {
   }

}
