package waebricc;

public class JavaLexerprs implements lpg.runtime.ParseTable, JavaLexersym {
    public final static int ERROR_SYMBOL = 0;
    public final int getErrorSymbol() { return ERROR_SYMBOL; }

    public final static int SCOPE_UBOUND = 0;
    public final int getScopeUbound() { return SCOPE_UBOUND; }

    public final static int SCOPE_SIZE = 0;
    public final int getScopeSize() { return SCOPE_SIZE; }

    public final static int MAX_NAME_LENGTH = 0;
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int NUM_STATES = 51;
    public final int getNumStates() { return NUM_STATES; }

    public final static int NT_OFFSET = 102;
    public final int getNtOffset() { return NT_OFFSET; }

    public final static int LA_STATE_OFFSET = 954;
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }

    public final static int MAX_LA = 7;
    public final int getMaxLa() { return MAX_LA; }

    public final static int NUM_RULES = 365;
    public final int getNumRules() { return NUM_RULES; }

    public final static int NUM_NONTERMINALS = 42;
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }

    public final static int NUM_SYMBOLS = 144;
    public final int getNumSymbols() { return NUM_SYMBOLS; }

    public final static int SEGMENT_SIZE = 8192;
    public final int getSegmentSize() { return SEGMENT_SIZE; }

    public final static int START_STATE = 366;
    public final int getStartState() { return START_STATE; }

    public final static int IDENTIFIER_SYMBOL = 0;
    public final int getIdentifier_SYMBOL() { return IDENTIFIER_SYMBOL; }

    public final static int EOFT_SYMBOL = 101;
    public final int getEoftSymbol() { return EOFT_SYMBOL; }

    public final static int EOLT_SYMBOL = 103;
    public final int getEoltSymbol() { return EOLT_SYMBOL; }

    public final static int ACCEPT_ACTION = 588;
    public final int getAcceptAction() { return ACCEPT_ACTION; }

    public final static int ERROR_ACTION = 589;
    public final int getErrorAction() { return ERROR_ACTION; }

    public final static boolean BACKTRACK = false;
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int getStartSymbol() { return lhs(0); }
    public final boolean isValidForParser() { return JavaLexersym.isValidForParser; }


    public interface IsNullable {
        public final static byte isNullable[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,1,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            1,0,0,1,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static byte isNullable[] = IsNullable.isNullable;
    public final boolean isNullable(int index) { return isNullable[index] != 0; }

    public interface ProsthesesIndex {
        public final static byte prosthesesIndex[] = {0,
            25,28,29,30,26,32,27,40,8,24,
            38,7,11,19,22,31,33,37,39,41,
            42,2,3,4,5,6,9,10,12,13,
            14,15,16,17,18,20,21,23,34,35,
            36,1
        };
    };
    public final static byte prosthesesIndex[] = ProsthesesIndex.prosthesesIndex;
    public final int prosthesesIndex(int index) { return prosthesesIndex[index]; }

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static byte baseCheck[] = {0,
            7,2,3,1,0,1,5,1,1,2,
            3,3,2,1,5,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2,2,1,1,1,1,
            1,1,1,1,1,1,2,3,4,3,
            2,2,0,1,2,2,2,0,2,1,
            1,2,1,2,1,2,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,2,1,2,2,2,
            1,2,2,1,2,1,1,2,2,2,
            2,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,6,2,1,2,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,6,2,2,2,2,2,2,
            2,2,2,2,2
        };
    };
    public final static byte baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static byte rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            22,23,24,24,26,12,12,22,22,22,
            22,22,22,22,22,22,22,22,22,22,
            22,22,22,22,22,22,22,22,22,22,
            22,22,22,22,22,22,22,22,22,22,
            22,22,22,22,22,22,31,31,31,31,
            32,32,32,32,33,33,34,34,29,29,
            13,13,13,35,35,37,37,7,7,7,
            7,7,2,2,2,2,2,3,3,3,
            3,3,3,3,3,3,3,3,3,3,
            3,3,3,3,3,3,3,3,3,3,
            3,3,3,4,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,4,1,
            1,1,1,1,1,1,1,1,1,16,
            16,16,16,16,16,16,16,6,6,6,
            6,6,6,6,6,6,6,6,6,5,
            5,14,14,36,36,9,9,27,27,27,
            27,25,25,39,39,28,40,40,40,40,
            40,40,41,41,41,41,41,41,41,41,
            41,41,41,41,41,41,41,41,41,41,
            41,41,41,41,41,41,41,41,41,41,
            41,18,18,18,18,18,18,18,18,18,
            18,18,18,18,18,18,18,18,18,18,
            18,18,18,18,18,18,18,18,18,11,
            11,11,11,11,11,11,11,11,11,11,
            11,11,11,11,11,11,11,11,11,11,
            11,11,11,11,11,19,19,19,19,19,
            19,19,19,19,19,19,19,19,19,19,
            19,19,19,19,19,19,19,19,19,19,
            19,19,19,15,15,15,15,38,38,38,
            38,38,38,38,38,17,17,17,17,17,
            17,17,17,17,30,30,20,20,20,21,
            21,21,21,21,21,21,21,21,21,21,
            21,21,21,21,21,21,21,21,21,21,
            21,21,21,21,21,10,10,10,10,10,
            10,10,10,10,10,10,8,8,8,8,
            8,8,8,8,8,8,606,480,479,479,
            479,1330,66,482,787,384,66,66,786,707,
            485,485,485,485,1598,49,1567,485,378,527,
            1620,166,1601,515,9,382,485,14,485,166,
            494,411,355,473,485,510,203,420,420,420,
            420,1611,64,1579,420,1644,420,420,1176,10,
            506,420,420,420,420,47,464,434,420,313,
            420,420,1602,62,1,52,52,52,52,540,
            1139,52,909,505,505,505,505,1625,1258,52,
            1610,1577,52,102,50,50,50,50,7,1622,
            50,1647,505,505,1360,371,1634,453,50,371,
            371,50,505,406,59,59,59,59,1643,1252,
            1253,59,1254,59,59,808,172,172,172,172,
            1599,589,589,172,303,57,57,57,57,589,
            589,371,172,589,172,1007,315,315,315,315,
            1260,520,520,520,520,1182,169,168,168,168,
            1105,179,178,178,178,315,315,1593,589,589,
            589,589,57,589,490,57,392,1383,553,415,
            1621,589,553,553,589,589,589,490,589,392,
            520,589,432,1406,555,1429,564,589,555,555,
            564,564,1452,571,1475,354,589,571,571,354,
            354,1498,573,1521,580,589,573,573,580,580,
            1544,312,589,589,589,312,312,589,589
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,98,99,
            100,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,68,
            69,70,71,72,73,74,75,76,77,78,
            79,80,81,82,83,84,85,86,87,88,
            89,90,91,92,93,94,95,96,97,98,
            99,100,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,74,75,76,77,
            78,79,80,81,82,83,84,85,86,87,
            88,89,90,91,92,93,94,95,96,97,
            98,99,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,74,75,76,77,
            78,0,0,81,82,83,84,85,86,87,
            88,89,90,91,92,93,94,95,96,97,
            98,99,100,0,102,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,74,
            75,76,77,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,94,
            95,96,97,98,99,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,74,
            75,76,77,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,94,
            95,96,97,98,99,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,74,
            0,76,77,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,94,
            95,96,0,98,99,100,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,68,69,70,71,72,73,
            74,75,76,77,78,0,0,81,82,83,
            84,85,86,87,88,89,90,91,92,93,
            94,95,96,97,98,99,100,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,69,70,71,72,
            73,74,75,76,77,78,101,101,81,82,
            83,84,85,86,87,88,89,90,91,92,
            93,94,95,96,97,98,99,100,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,0,0,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,0,69,70,71,
            72,73,74,75,76,77,78,0,0,81,
            82,83,84,85,86,87,0,89,90,91,
            92,93,94,95,96,97,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            0,0,36,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,0,69,70,71,72,73,
            74,75,76,77,78,0,0,81,82,83,
            84,85,86,87,0,89,90,91,92,93,
            94,95,96,97,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,0,31,32,33,0,0,
            36,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,61,62,63,64,65,
            66,67,0,69,70,0,0,0,0,0,
            76,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,73,31,32,33,0,0,36,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,74,
            69,0,0,0,0,0,0,0,77,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,0,
            31,32,33,0,0,36,37,38,39,40,
            41,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
            61,62,63,64,65,66,67,70,69,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,101,101,101,26,0,0,29,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,0,1,2,3,
            4,5,6,7,8,9,0,11,0,1,
            2,3,4,5,6,7,8,9,0,11,
            24,25,0,27,28,0,30,0,0,23,
            0,0,24,25,0,27,28,0,30,0,
            0,1,2,3,4,5,6,7,8,0,
            0,0,12,13,0,30,34,35,30,34,
            35,34,35,0,34,35,26,71,72,29,
            31,75,0,0,23,0,0,0,0,71,
            72,32,33,75,34,35,10,24,0,0,
            68,0,0,68,0,68,100,25,68,10,
            25,79,80,30,79,80,79,80,100,79,
            80,0,24,0,23,23,88,0,68,88,
            0,0,0,0,70,0,0,0,0,79,
            80,0,78,0,0,0,0,0,0,0,
            101,0,0,0,0,0,0,0,0,0,
            101,0,0,0,0,101,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            589,641,641,641,641,641,641,641,641,641,
            641,641,641,641,641,641,641,641,641,641,
            641,641,641,641,641,641,641,641,641,641,
            641,641,641,641,641,641,641,641,641,641,
            641,641,641,641,641,641,641,641,641,641,
            641,641,641,641,641,641,641,641,641,641,
            641,641,641,641,641,641,641,641,641,641,
            640,641,641,641,641,641,641,641,453,641,
            641,641,641,641,641,641,641,641,641,641,
            641,641,641,641,641,641,641,641,641,641,
            641,589,639,639,639,639,639,639,639,639,
            639,639,639,639,639,639,639,639,639,639,
            639,639,639,639,639,639,639,639,639,639,
            639,639,639,639,639,639,639,639,639,639,
            639,639,639,639,639,639,639,639,639,639,
            639,639,639,639,639,639,639,639,639,639,
            639,639,639,639,639,639,639,639,639,639,
            639,604,639,639,639,639,639,639,639,644,
            639,639,639,639,639,639,639,639,639,639,
            639,639,639,639,639,639,639,639,639,639,
            639,639,589,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,649,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,650,420,420,386,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,16,646,646,646,646,646,646,646,
            646,646,646,646,646,646,646,646,646,646,
            646,646,646,646,646,646,646,646,646,646,
            646,646,646,646,646,646,646,646,646,646,
            646,646,646,646,646,646,646,646,646,646,
            646,646,646,646,646,646,646,646,646,646,
            646,646,646,646,646,646,646,646,646,646,
            646,646,646,646,646,646,646,646,646,646,
            646,53,589,646,646,646,646,646,646,646,
            646,646,646,646,646,646,646,646,646,646,
            646,646,646,589,646,589,648,648,648,648,
            648,648,648,648,648,648,648,648,648,648,
            648,648,648,648,648,648,648,648,648,648,
            648,648,648,648,648,600,648,648,648,648,
            648,648,648,648,648,648,648,648,648,648,
            648,648,648,648,648,648,648,648,648,648,
            648,648,648,648,648,648,648,648,648,648,
            648,648,648,648,648,648,648,601,648,648,
            386,648,648,648,648,648,648,648,648,648,
            648,648,648,648,648,648,648,648,648,648,
            648,648,648,648,648,589,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,649,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,650,420,420,
            386,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,420,420,420,420,420,
            420,420,420,420,420,589,390,480,480,480,
            480,480,480,480,479,479,479,480,480,479,
            450,479,479,479,479,479,479,479,479,479,
            479,479,479,479,479,406,479,479,479,482,
            482,479,479,479,479,479,479,479,479,479,
            479,479,479,479,479,479,479,479,479,479,
            479,479,479,479,479,479,479,479,479,479,
            479,479,479,482,479,447,442,626,440,418,
            589,448,610,611,482,482,609,629,608,621,
            619,618,616,617,632,633,630,631,634,607,
            612,614,589,615,613,374,589,485,485,485,
            485,485,485,485,485,485,485,485,485,485,
            485,485,485,485,485,485,485,485,485,485,
            485,485,485,485,485,485,591,485,485,485,
            485,485,485,485,485,485,485,485,485,485,
            485,485,485,485,485,485,485,485,485,485,
            485,485,485,485,485,485,485,485,485,485,
            485,485,485,485,485,485,485,485,485,485,
            485,413,485,485,485,589,58,485,485,485,
            485,485,485,485,485,485,485,485,485,485,
            485,485,485,485,485,485,485,589,761,761,
            761,761,761,761,761,761,761,761,761,761,
            761,761,761,761,761,761,761,761,761,761,
            761,761,761,761,761,761,761,592,761,761,
            761,761,761,761,761,761,761,761,761,761,
            761,761,761,761,761,761,761,761,761,761,
            761,761,761,761,761,761,761,761,761,761,
            761,761,761,761,761,761,761,761,761,761,
            761,761,413,761,761,761,588,38,761,761,
            761,761,761,761,761,761,761,761,761,761,
            761,761,761,761,761,761,761,761,589,505,
            505,505,505,505,505,505,505,505,505,505,
            505,505,505,505,505,505,505,505,505,505,
            505,505,505,505,505,505,505,505,505,505,
            505,505,589,589,505,505,505,505,505,505,
            505,505,505,505,505,505,505,505,505,505,
            505,505,505,505,505,505,505,505,505,505,
            505,505,505,505,505,505,589,505,505,505,
            505,505,505,505,505,505,505,589,589,505,
            505,505,505,505,505,505,589,505,505,505,
            505,505,505,505,505,505,13,904,904,904,
            904,904,904,904,904,904,904,904,904,904,
            904,904,904,904,904,904,904,904,904,904,
            904,904,904,904,904,904,904,904,904,904,
            589,589,904,904,904,904,904,904,904,904,
            904,904,904,904,904,904,904,904,904,904,
            904,904,904,904,904,904,904,904,904,904,
            904,904,904,904,589,904,904,904,904,904,
            904,904,904,904,904,589,589,904,904,904,
            904,904,904,904,589,904,904,904,904,904,
            904,904,904,904,175,768,768,768,768,768,
            768,768,768,767,767,767,768,768,767,767,
            767,767,767,767,767,767,767,767,767,767,
            767,767,767,767,589,767,767,767,33,589,
            767,767,767,767,767,767,767,767,767,767,
            767,767,767,767,767,767,767,767,767,767,
            767,767,767,767,767,767,767,767,767,767,
            767,767,589,767,770,34,589,589,589,589,
            769,8,758,758,758,758,758,758,758,758,
            757,757,757,758,758,757,757,757,757,757,
            757,757,757,757,757,757,757,757,757,757,
            757,625,757,757,757,589,589,757,757,757,
            757,757,757,757,757,757,757,757,757,757,
            757,757,757,757,757,757,757,757,757,757,
            757,757,757,757,757,757,757,757,757,624,
            757,167,63,165,589,589,589,39,759,589,
            520,520,520,520,520,520,520,520,520,520,
            520,520,520,520,520,520,520,520,520,520,
            520,520,520,520,520,520,520,520,520,589,
            520,520,520,589,589,520,520,520,520,520,
            520,520,520,520,520,520,520,520,520,520,
            520,520,520,520,520,520,520,520,520,520,
            520,520,520,520,520,520,520,762,520,48,
            655,655,655,655,655,655,655,655,655,655,
            655,655,655,655,655,655,655,655,655,655,
            655,655,8,14,17,638,589,589,638,589,
            371,371,371,371,371,371,371,371,371,371,
            371,371,371,371,371,371,371,371,371,371,
            371,371,589,553,553,553,553,553,553,553,
            553,553,553,553,553,553,553,553,553,553,
            553,553,553,553,553,589,555,555,555,555,
            555,555,555,555,555,555,555,555,555,555,
            555,555,555,555,555,555,555,555,589,564,
            564,564,564,564,564,564,564,564,564,564,
            564,564,564,564,564,564,564,564,564,564,
            564,589,571,571,571,571,571,571,571,571,
            571,571,571,571,571,571,571,571,571,571,
            571,571,571,571,589,943,943,943,943,943,
            943,943,943,943,943,943,943,943,943,943,
            943,943,943,943,943,943,943,589,573,573,
            573,573,573,573,573,573,573,573,573,573,
            573,573,573,573,573,573,573,573,573,573,
            589,580,580,580,580,580,580,580,580,580,
            580,580,580,580,580,580,580,580,580,580,
            580,580,580,589,901,901,901,901,901,901,
            901,901,901,901,901,901,901,901,901,901,
            901,901,901,901,901,901,589,944,944,944,
            944,944,944,944,944,945,589,948,589,902,
            902,902,902,902,902,902,902,945,589,948,
            947,946,5,949,537,79,950,17,165,459,
            6,589,947,946,589,949,562,589,950,167,
            14,653,653,653,653,653,653,653,653,63,
            5,589,653,653,174,451,490,490,6,451,
            451,755,755,589,755,755,636,951,952,636,
            2617,954,589,589,461,79,589,589,589,951,
            952,464,464,954,490,490,466,478,79,79,
            490,79,79,451,589,755,953,590,755,2613,
            2550,490,490,379,451,451,755,755,953,755,
            755,589,2600,589,2614,2616,6,589,490,593,
            589,589,589,589,645,589,589,589,589,490,
            490,589,395,589,589,589,589,589,589,589,
            8,589,589,589,589,589,589,589,589,589,
            14,589,589,589,589,31
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }
    public final int asb(int index) { return 0; }
    public final int asr(int index) { return 0; }
    public final int nasb(int index) { return 0; }
    public final int nasr(int index) { return 0; }
    public final int terminalIndex(int index) { return 0; }
    public final int nonterminalIndex(int index) { return 0; }
    public final int scopePrefix(int index) { return 0;}
    public final int scopeSuffix(int index) { return 0;}
    public final int scopeLhs(int index) { return 0;}
    public final int scopeLa(int index) { return 0;}
    public final int scopeStateSet(int index) { return 0;}
    public final int scopeRhs(int index) { return 0;}
    public final int scopeState(int index) { return 0;}
    public final int inSymb(int index) { return 0;}
    public final String name(int index) { return null; }
    public final int originalState(int state) { return 0; }
    public final int asi(int state) { return 0; }
    public final int nasi(int state) { return 0; }
    public final int inSymbol(int state) { return 0; }

    /**
     * assert(! goto_default);
     */
    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    /**
     * assert(! shift_default);
     */
    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
