package waebricc;

public interface WaebricParsersym {
    public final static int
      TK_IDENTIFIER = 1,
      TK_StringLiteral = 5,
      TK_IntegerLiteral = 6,
      TK_PreText = 22,
      TK_MidText = 23,
      TK_PostText = 24,
      TK_module = 16,
      TK_site = 11,
      TK_end = 12,
      TK_def = 13,
      TK_if = 25,
      TK_each = 26,
      TK_else = 27,
      TK_let = 28,
      TK_in = 29,
      TK_comment = 30,
      TK_echo = 31,
      TK_cdata = 32,
      TK_yield = 33,
      TK_LPAREN = 14,
      TK_RPAREN = 7,
      TK_LBRACE = 8,
      TK_RBRACE = 17,
      TK_LBRACKET = 9,
      TK_RBRACKET = 18,
      TK_SEMICOLON = 19,
      TK_COMMA = 3,
      TK_DOT = 2,
      TK_COLON = 4,
      TK_SLASH = 10,
      TK_SHARP = 15,
      TK_EQUAL = 20,
      TK_XOR = 34,
      TK_EOF_TOKEN = 21,
      TK_SlComment = 35,
      TK_MlComment = 36,
      TK_DocComment = 37,
      TK_LongLiteral = 38,
      TK_FloatingPointLiteral = 39,
      TK_DoubleLiteral = 40,
      TK_CharacterLiteral = 41,
      TK_PLUS = 42,
      TK_MINUS = 43,
      TK_NOT = 44,
      TK_REMAINDER = 45,
      TK_AND = 46,
      TK_MULTIPLY = 47,
      TK_OR = 48,
      TK_TWIDDLE = 49,
      TK_GREATER = 50,
      TK_LESS = 51,
      TK_QUESTION = 52,
      TK_ERROR_TOKEN = 53;

    public final static String orderedTerminalSymbols[] = {
                 "",
                 "IDENTIFIER",
                 "DOT",
                 "COMMA",
                 "COLON",
                 "StringLiteral",
                 "IntegerLiteral",
                 "RPAREN",
                 "LBRACE",
                 "LBRACKET",
                 "SLASH",
                 "site",
                 "end",
                 "def",
                 "LPAREN",
                 "SHARP",
                 "module",
                 "RBRACE",
                 "RBRACKET",
                 "SEMICOLON",
                 "EQUAL",
                 "EOF_TOKEN",
                 "PreText",
                 "MidText",
                 "PostText",
                 "if",
                 "each",
                 "else",
                 "let",
                 "in",
                 "comment",
                 "echo",
                 "cdata",
                 "yield",
                 "XOR",
                 "SlComment",
                 "MlComment",
                 "DocComment",
                 "LongLiteral",
                 "FloatingPointLiteral",
                 "DoubleLiteral",
                 "CharacterLiteral",
                 "PLUS",
                 "MINUS",
                 "NOT",
                 "REMAINDER",
                 "AND",
                 "MULTIPLY",
                 "OR",
                 "TWIDDLE",
                 "GREATER",
                 "LESS",
                 "QUESTION",
                 "ERROR_TOKEN"
             };

    public final static int numTokenKinds = orderedTerminalSymbols.length;
    public final static boolean isValidForParser = true;
}
