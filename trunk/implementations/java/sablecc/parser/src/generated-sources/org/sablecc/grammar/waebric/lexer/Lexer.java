/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.lexer;

import java.io.*;
import org.sablecc.grammar.waebric.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.NORMAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 0: state = State.COMMENT; break;
                            }
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            switch(state.id())
                            {
                                case 1: state = State.NORMAL; break;
                            }
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TModuleKeyword(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEach(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLet(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDef(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIn(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnd(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComment(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEcho(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCdata(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TYield(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImport(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSite(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TList(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRecord(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBracket(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBracket(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemiColon(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaret(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumberSign(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDollarSign(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtSign(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercentSign(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQuestionMark(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExclamMark(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComments(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhitespace(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdCon(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNatCon(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSymbolCon(text, line, pos); }
    Token new44(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStrCon(text, line, pos); }
    Token new45(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFilename(text, line, pos); }
    Token new46(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TText(text, line, pos); }
    Token new47(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPreText(text, line, pos); }
    Token new48(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPostText(text, line, pos); }
    Token new49(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMidText(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // NORMAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {35, 35, 7}, {36, 36, 8}, {37, 37, 9}, {38, 38, 10}, {39, 39, 11}, {40, 40, 12}, {41, 41, 13}, {43, 43, 14}, {44, 44, 15}, {46, 46, 16}, {47, 47, 17}, {48, 57, 18}, {58, 58, 19}, {59, 59, 20}, {61, 61, 21}, {62, 62, 22}, {63, 63, 23}, {64, 64, 24}, {65, 90, 25}, {91, 91, 26}, {93, 93, 27}, {94, 94, 28}, {97, 98, 29}, {99, 99, 30}, {100, 100, 31}, {101, 101, 32}, {102, 104, 29}, {105, 105, 33}, {106, 107, 29}, {108, 108, 34}, {109, 109, 35}, {110, 113, 29}, {114, 114, 36}, {115, 115, 37}, {116, 120, 29}, {121, 121, 38}, {122, 122, 29}, {123, 123, 39}, {124, 124, 40}, {125, 125, 41}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {{9, 10, 42}, {13, 13, 42}, {32, 33, 42}, {34, 34, 43}, {35, 37, 42}, {38, 38, 44}, {39, 59, 42}, {60, 60, 45}, {61, 91, 42}, {92, 92, 46}, {93, 127, 42}, },
            {},
            {},
            {},
            {{38, 38, 47}, },
            {{33, 40, 48}, {42, 43, 48}, {45, 58, 48}, {60, 61, 48}, {63, 127, 48}, },
            {},
            {},
            {},
            {},
            {},
            {{42, 42, 49}, {47, 47, 50}, },
            {{48, 57, 18}, },
            {},
            {},
            {},
            {{9, 10, 51}, {13, 13, 51}, {32, 33, 51}, {34, 34, 52}, {35, 37, 51}, {38, 38, 53}, {39, 59, 51}, {60, 60, 54}, {61, 91, 51}, {92, 92, 55}, {93, 127, 51}, },
            {},
            {},
            {{45, 45, 56}, {48, 57, 57}, {65, 90, 58}, {97, 122, 59}, },
            {{33, 45, 60}, {47, 91, 60}, {93, 127, 60}, },
            {},
            {},
            {{45, 122, -27}, },
            {{45, 90, -27}, {97, 99, 59}, {100, 100, 61}, {101, 110, 59}, {111, 111, 62}, {112, 122, 59}, },
            {{45, 90, -27}, {97, 100, 59}, {101, 101, 63}, {102, 122, 59}, },
            {{45, 90, -27}, {97, 97, 64}, {98, 98, 59}, {99, 99, 65}, {100, 107, 59}, {108, 108, 66}, {109, 109, 59}, {110, 110, 67}, {111, 122, 59}, },
            {{45, 90, -27}, {97, 101, 59}, {102, 102, 68}, {103, 108, 59}, {109, 109, 69}, {110, 110, 70}, {111, 122, 59}, },
            {{45, 100, -33}, {101, 101, 71}, {102, 104, 59}, {105, 105, 72}, {106, 122, 59}, },
            {{45, 90, -27}, {97, 110, 59}, {111, 111, 73}, {112, 122, 59}, },
            {{45, 100, -33}, {101, 101, 74}, {102, 122, 59}, },
            {{45, 90, -27}, {97, 104, 59}, {105, 105, 75}, {106, 115, 59}, {116, 116, 76}, {117, 122, 59}, },
            {{45, 104, -39}, {105, 105, 77}, {106, 122, 59}, },
            {},
            {{124, 124, 78}, },
            {},
            {{9, 127, -8}, },
            {},
            {{9, 33, -8}, {34, 34, 79}, {35, 35, 80}, {36, 37, 42}, {38, 60, -8}, {61, 64, 42}, {65, 90, 81}, {91, 91, 42}, {92, 92, 46}, {93, 94, 42}, {95, 95, 82}, {96, 96, 42}, {97, 122, 83}, {123, 127, 42}, },
            {},
            {{9, 33, -8}, {34, 34, 84}, {35, 91, -8}, {92, 92, 85}, {93, 127, 42}, },
            {},
            {{33, 127, -13}, },
            {{0, 41, 86}, {43, 46, 86}, {47, 47, 87}, {48, 65535, 86}, },
            {{10, 10, 88}, {13, 13, 89}, {32, 127, 90}, },
            {{9, 127, -24}, },
            {},
            {{9, 33, -24}, {34, 34, 91}, {35, 35, 92}, {36, 37, 51}, {38, 60, -24}, {61, 64, 51}, {65, 90, 93}, {91, 91, 51}, {92, 92, 55}, {93, 94, 51}, {95, 95, 94}, {96, 96, 51}, {97, 122, 95}, {123, 127, 51}, },
            {},
            {{9, 33, -24}, {34, 34, 96}, {35, 91, -24}, {92, 92, 97}, {93, 127, 51}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{33, 45, 60}, {46, 46, 98}, {47, 127, -28}, },
            {{45, 90, -27}, {97, 97, 99}, {98, 122, 59}, },
            {{45, 90, -27}, {97, 108, 59}, {109, 109, 100}, {110, 122, 59}, },
            {{45, 101, -35}, {102, 102, 101}, {103, 122, 59}, },
            {{45, 90, -27}, {97, 98, 59}, {99, 99, 102}, {100, 122, 59}, },
            {{45, 90, -27}, {97, 103, 59}, {104, 104, 103}, {105, 122, 59}, },
            {{45, 90, -27}, {97, 114, 59}, {115, 115, 104}, {116, 122, 59}, },
            {{45, 99, -32}, {100, 100, 105}, {101, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 90, -27}, {97, 111, 59}, {112, 112, 106}, {113, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 90, -27}, {97, 115, 59}, {116, 116, 107}, {117, 122, 59}, },
            {{45, 114, -68}, {115, 115, 108}, {116, 122, 59}, },
            {{45, 99, -32}, {100, 100, 109}, {101, 122, 59}, },
            {{45, 98, -66}, {99, 99, 110}, {100, 122, 59}, },
            {{45, 115, -73}, {116, 116, 111}, {117, 122, 59}, },
            {{45, 90, -27}, {97, 113, 59}, {114, 114, 112}, {115, 122, 59}, },
            {{45, 100, -33}, {101, 101, 113}, {102, 122, 59}, },
            {},
            {{45, 45, 114}, {46, 46, 115}, {48, 57, 116}, {58, 58, 117}, {59, 59, 118}, {65, 90, 119}, {95, 95, 120}, {97, 122, 121}, },
            {{9, 38, -8}, {39, 47, 42}, {48, 57, 122}, {58, 59, 42}, {60, 92, -8}, {93, 119, 42}, {120, 120, 123}, {121, 127, 42}, },
            {{9, 38, -8}, {39, 44, 42}, {45, 45, 124}, {46, 46, 125}, {47, 47, 42}, {48, 57, 126}, {58, 58, 127}, {59, 59, 128}, {60, 64, -46}, {65, 90, 129}, {91, 94, -46}, {95, 95, 130}, {96, 96, 42}, {97, 122, 131}, {123, 127, 42}, },
            {{9, 127, -83}, },
            {{9, 127, -83}, },
            {{9, 127, -8}, },
            {{9, 127, -48}, },
            {{0, 41, 132}, {42, 42, 133}, {43, 65535, 132}, },
            {},
            {{10, 13, -52}, },
            {{10, 13, -52}, },
            {{10, 127, -52}, },
            {{45, 45, 134}, {46, 46, 135}, {48, 57, 136}, {58, 58, 137}, {59, 59, 138}, {65, 90, 139}, {95, 95, 140}, {97, 122, 141}, },
            {{9, 38, -24}, {39, 47, 51}, {48, 57, 142}, {58, 59, 51}, {60, 92, -24}, {93, 119, 51}, {120, 120, 143}, {121, 127, 51}, },
            {{9, 38, -24}, {39, 44, 51}, {45, 45, 144}, {46, 46, 145}, {47, 47, 51}, {48, 57, 146}, {58, 58, 147}, {59, 59, 148}, {60, 64, -55}, {65, 90, 149}, {91, 94, -55}, {95, 95, 150}, {96, 96, 51}, {97, 122, 151}, {123, 127, 51}, },
            {{9, 127, -95}, },
            {{9, 127, -95}, },
            {{9, 127, -24}, },
            {{9, 127, -57}, },
            {{48, 57, 152}, {65, 90, 153}, {97, 122, 154}, },
            {{45, 115, -73}, {116, 116, 155}, {117, 122, 59}, },
            {{45, 108, -64}, {109, 109, 156}, {110, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 103, -67}, {104, 104, 157}, {105, 122, 59}, },
            {{45, 110, -37}, {111, 111, 158}, {112, 122, 59}, },
            {{45, 100, -33}, {101, 101, 159}, {102, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 110, -37}, {111, 111, 160}, {112, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 115, -73}, {116, 116, 161}, {117, 122, 59}, },
            {{45, 90, -27}, {97, 116, 59}, {117, 117, 162}, {118, 122, 59}, },
            {{45, 110, -37}, {111, 111, 163}, {112, 122, 59}, },
            {{45, 100, -33}, {101, 101, 164}, {102, 122, 59}, },
            {{45, 104, -39}, {105, 105, 165}, {106, 122, 59}, },
            {{45, 90, -27}, {97, 107, 59}, {108, 108, 166}, {109, 122, 59}, },
            {{45, 122, -81}, },
            {{45, 122, -81}, },
            {{45, 122, -81}, },
            {{45, 122, -81}, },
            {{9, 127, -8}, },
            {{45, 122, -81}, },
            {{45, 122, -81}, },
            {{45, 122, -81}, },
            {{9, 57, -82}, {58, 58, 42}, {59, 59, 167}, {60, 127, -8}, },
            {{9, 47, -82}, {48, 57, 168}, {58, 60, -82}, {61, 64, 42}, {65, 90, 169}, {91, 92, -46}, {93, 96, 42}, {97, 122, 170}, {123, 127, 42}, },
            {{9, 127, -83}, },
            {{9, 127, -83}, },
            {{9, 127, -83}, },
            {{9, 127, -83}, },
            {{9, 127, -8}, },
            {{9, 127, -83}, },
            {{9, 127, -83}, },
            {{9, 127, -83}, },
            {{0, 65535, -88}, },
            {{0, 41, 86}, {42, 42, 133}, {43, 65535, -51}, },
            {{45, 122, -93}, },
            {{45, 122, -93}, },
            {{45, 122, -93}, },
            {{45, 122, -93}, },
            {{9, 127, -24}, },
            {{45, 122, -93}, },
            {{45, 122, -93}, },
            {{45, 122, -93}, },
            {{9, 57, -94}, {58, 58, 51}, {59, 59, 171}, {60, 127, -24}, },
            {{9, 47, -94}, {48, 57, 172}, {58, 60, -94}, {61, 64, 51}, {65, 90, 173}, {91, 92, -55}, {93, 96, 51}, {97, 122, 174}, {123, 127, 51}, },
            {{9, 127, -95}, },
            {{9, 127, -95}, },
            {{9, 127, -95}, },
            {{9, 127, -95}, },
            {{9, 127, -24}, },
            {{9, 127, -95}, },
            {{9, 127, -95}, },
            {{9, 127, -95}, },
            {{48, 90, -100}, {93, 93, 175}, {97, 122, 154}, },
            {{48, 122, -154}, },
            {{48, 122, -154}, },
            {{45, 90, -27}, {97, 97, 176}, {98, 122, 59}, },
            {{45, 100, -33}, {101, 101, 177}, {102, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 113, -78}, {114, 114, 178}, {115, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 107, -115}, {108, 108, 179}, {109, 122, 59}, },
            {{45, 113, -78}, {114, 114, 180}, {115, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 90, -27}, {97, 109, 59}, {110, 110, 181}, {111, 122, 59}, },
            {{45, 99, -32}, {100, 100, 182}, {101, 122, 59}, },
            {{9, 127, -8}, },
            {{9, 57, -125}, {58, 58, 42}, {59, 59, 183}, {60, 127, -125}, },
            {{9, 127, -170}, },
            {{9, 127, -170}, },
            {{9, 127, -24}, },
            {{9, 57, -145}, {58, 58, 51}, {59, 59, 184}, {60, 127, -145}, },
            {{9, 127, -174}, },
            {{9, 127, -174}, },
            {},
            {{45, 122, -27}, },
            {{45, 109, -167}, {110, 110, 185}, {111, 122, 59}, },
            {{45, 115, -73}, {116, 116, 186}, {117, 122, 59}, },
            {{45, 100, -33}, {101, 101, 187}, {102, 122, 59}, },
            {{45, 99, -32}, {100, 100, 188}, {101, 122, 59}, },
            {{45, 90, -27}, {97, 102, 59}, {103, 103, 189}, {104, 122, 59}, },
            {{45, 122, -27}, },
            {{9, 127, -8}, },
            {{9, 127, -24}, },
            {{45, 115, -73}, {116, 116, 190}, {117, 122, 59}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
        }
        { // COMMENT
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {35, 35, 7}, {36, 36, 8}, {37, 37, 9}, {38, 38, 10}, {39, 39, 11}, {40, 40, 12}, {41, 41, 13}, {43, 43, 14}, {44, 44, 15}, {46, 46, 16}, {47, 47, 17}, {48, 57, 18}, {58, 58, 19}, {59, 59, 20}, {61, 61, 21}, {62, 62, 22}, {63, 63, 23}, {64, 64, 24}, {65, 90, 25}, {91, 91, 26}, {93, 93, 27}, {94, 94, 28}, {97, 98, 29}, {99, 99, 30}, {100, 100, 31}, {101, 101, 32}, {102, 104, 29}, {105, 105, 33}, {106, 107, 29}, {108, 108, 34}, {109, 109, 35}, {110, 113, 29}, {114, 114, 36}, {115, 115, 37}, {116, 120, 29}, {121, 121, 38}, {122, 122, 29}, {123, 123, 39}, {124, 124, 40}, {125, 125, 41}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {{9, 10, 42}, {13, 13, 42}, {32, 33, 43}, {34, 34, 44}, {35, 37, 43}, {38, 38, 45}, {39, 59, 43}, {60, 60, 46}, {61, 91, 43}, {92, 92, 47}, {93, 127, 43}, {128, 255, 48}, },
            {},
            {},
            {},
            {{38, 38, 49}, },
            {{33, 40, 50}, {42, 43, 50}, {45, 58, 50}, {60, 61, 50}, {63, 127, 50}, },
            {},
            {},
            {},
            {},
            {},
            {{42, 42, 51}, {47, 47, 52}, },
            {{48, 57, 18}, },
            {},
            {},
            {},
            {{9, 10, 53}, {13, 13, 53}, {32, 33, 53}, {34, 34, 54}, {35, 37, 53}, {38, 38, 55}, {39, 59, 53}, {60, 60, 56}, {61, 91, 53}, {92, 92, 57}, {93, 127, 53}, },
            {},
            {},
            {{45, 45, 58}, {48, 57, 59}, {65, 90, 60}, {97, 122, 61}, },
            {{33, 45, 62}, {47, 91, 62}, {93, 127, 62}, },
            {},
            {},
            {{45, 122, -27}, },
            {{45, 90, -27}, {97, 99, 61}, {100, 100, 63}, {101, 122, 61}, },
            {{45, 90, -27}, {97, 100, 61}, {101, 101, 64}, {102, 122, 61}, },
            {{45, 90, -27}, {97, 97, 65}, {98, 98, 61}, {99, 99, 66}, {100, 107, 61}, {108, 108, 67}, {109, 109, 61}, {110, 110, 68}, {111, 122, 61}, },
            {{45, 90, -27}, {97, 101, 61}, {102, 102, 69}, {103, 108, 61}, {109, 109, 70}, {110, 110, 71}, {111, 122, 61}, },
            {{45, 100, -33}, {101, 101, 72}, {102, 104, 61}, {105, 105, 73}, {106, 122, 61}, },
            {{45, 90, -27}, {97, 110, 61}, {111, 111, 74}, {112, 122, 61}, },
            {{45, 100, -33}, {101, 101, 75}, {102, 122, 61}, },
            {{45, 90, -27}, {97, 104, 61}, {105, 105, 76}, {106, 115, 61}, {116, 116, 77}, {117, 122, 61}, },
            {{45, 104, -39}, {105, 105, 78}, {106, 122, 61}, },
            {},
            {{124, 124, 79}, },
            {},
            {{9, 13, -8}, {32, 33, 42}, {34, 34, 80}, {35, 37, 42}, {38, 38, 81}, {39, 59, 42}, {60, 60, 82}, {61, 91, 42}, {92, 92, 83}, {93, 127, 42}, },
            {{9, 255, -8}, },
            {},
            {{9, 33, -8}, {34, 34, 84}, {35, 35, 85}, {36, 37, 43}, {38, 60, -8}, {61, 64, 43}, {65, 90, 86}, {91, 91, 43}, {92, 92, 47}, {93, 94, 43}, {95, 95, 87}, {96, 96, 43}, {97, 122, 88}, {123, 127, 43}, {128, 255, 48}, },
            {{32, 33, 48}, {34, 34, 89}, {35, 91, 48}, {92, 92, 90}, {93, 255, 48}, },
            {{9, 33, -44}, {34, 34, 91}, {35, 38, -44}, {39, 47, 42}, {48, 57, 92}, {58, 59, 42}, {60, 91, -44}, {92, 92, 93}, {93, 109, 42}, {110, 110, 94}, {111, 115, 42}, {116, 116, 95}, {117, 127, 42}, },
            {{32, 255, -48}, },
            {},
            {{33, 127, -13}, },
            {{0, 41, 96}, {43, 46, 96}, {47, 47, 97}, {48, 65535, 96}, },
            {{10, 10, 98}, {13, 13, 99}, {32, 127, 100}, },
            {{9, 127, -24}, },
            {},
            {{9, 33, -24}, {34, 34, 101}, {35, 35, 102}, {36, 37, 53}, {38, 60, -24}, {61, 64, 53}, {65, 90, 103}, {91, 91, 53}, {92, 92, 57}, {93, 94, 53}, {95, 95, 104}, {96, 96, 53}, {97, 122, 105}, {123, 127, 53}, },
            {},
            {{9, 33, -24}, {34, 34, 106}, {35, 91, -24}, {92, 92, 107}, {93, 127, 53}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{33, 45, 62}, {46, 46, 108}, {47, 127, -28}, },
            {{45, 90, -27}, {97, 97, 109}, {98, 122, 61}, },
            {{45, 101, -35}, {102, 102, 110}, {103, 122, 61}, },
            {{45, 90, -27}, {97, 98, 61}, {99, 99, 111}, {100, 122, 61}, },
            {{45, 90, -27}, {97, 103, 61}, {104, 104, 112}, {105, 122, 61}, },
            {{45, 90, -27}, {97, 114, 61}, {115, 115, 113}, {116, 122, 61}, },
            {{45, 99, -32}, {100, 100, 114}, {101, 122, 61}, },
            {{45, 122, -27}, },
            {{45, 90, -27}, {97, 111, 61}, {112, 112, 115}, {113, 122, 61}, },
            {{45, 122, -27}, },
            {{45, 90, -27}, {97, 115, 61}, {116, 116, 116}, {117, 122, 61}, },
            {{45, 114, -69}, {115, 115, 117}, {116, 122, 61}, },
            {{45, 99, -32}, {100, 100, 118}, {101, 122, 61}, },
            {{45, 98, -67}, {99, 99, 119}, {100, 122, 61}, },
            {{45, 115, -74}, {116, 116, 120}, {117, 122, 61}, },
            {{45, 90, -27}, {97, 113, 61}, {114, 114, 121}, {115, 122, 61}, },
            {{45, 100, -33}, {101, 101, 122}, {102, 122, 61}, },
            {},
            {},
            {{9, 33, -44}, {34, 34, 123}, {35, 35, 124}, {36, 37, 42}, {38, 60, -44}, {61, 64, 42}, {65, 90, 125}, {91, 91, 42}, {92, 92, 83}, {93, 94, 42}, {95, 95, 126}, {96, 96, 42}, {97, 122, 127}, {123, 127, 42}, },
            {},
            {{9, 33, -44}, {34, 34, 128}, {35, 91, -44}, {92, 92, 129}, {93, 127, 42}, },
            {{45, 45, 130}, {46, 46, 131}, {48, 57, 132}, {58, 58, 133}, {59, 59, 134}, {65, 90, 135}, {95, 95, 136}, {97, 122, 137}, },
            {{9, 38, -8}, {39, 47, 43}, {48, 57, 138}, {58, 59, 43}, {60, 92, -8}, {93, 119, 43}, {120, 120, 139}, {121, 127, 43}, {128, 255, 48}, },
            {{9, 38, -8}, {39, 44, 43}, {45, 45, 140}, {46, 46, 141}, {47, 47, 43}, {48, 57, 142}, {58, 58, 143}, {59, 59, 144}, {60, 64, -47}, {65, 90, 145}, {91, 94, -47}, {95, 95, 146}, {96, 96, 43}, {97, 122, 147}, {123, 255, -47}, },
            {{9, 255, -88}, },
            {{9, 255, -88}, },
            {},
            {{34, 34, 148}, {48, 57, 149}, {92, 92, 150}, {110, 110, 151}, {116, 116, 152}, },
            {{9, 255, -8}, },
            {{9, 38, -44}, {39, 47, 42}, {48, 57, 153}, {58, 91, -49}, {92, 127, -44}, },
            {{9, 33, -8}, {34, 34, 154}, {35, 91, -8}, {92, 92, 155}, {93, 255, -8}, },
            {{9, 255, -8}, },
            {{9, 255, -8}, },
            {{0, 41, 156}, {42, 42, 157}, {43, 65535, 156}, },
            {},
            {{10, 13, -54}, },
            {{10, 13, -54}, },
            {{10, 127, -54}, },
            {{45, 45, 158}, {46, 46, 159}, {48, 57, 160}, {58, 58, 161}, {59, 59, 162}, {65, 90, 163}, {95, 95, 164}, {97, 122, 165}, },
            {{9, 38, -24}, {39, 47, 53}, {48, 57, 166}, {58, 59, 53}, {60, 92, -24}, {93, 119, 53}, {120, 120, 167}, {121, 127, 53}, },
            {{9, 38, -24}, {39, 44, 53}, {45, 45, 168}, {46, 46, 169}, {47, 47, 53}, {48, 57, 170}, {58, 58, 171}, {59, 59, 172}, {60, 64, -57}, {65, 90, 173}, {91, 94, -57}, {95, 95, 174}, {96, 96, 53}, {97, 122, 175}, {123, 127, 53}, },
            {{9, 127, -105}, },
            {{9, 127, -105}, },
            {{9, 127, -24}, },
            {{9, 127, -59}, },
            {{48, 57, 176}, {65, 90, 177}, {97, 122, 178}, },
            {{45, 115, -74}, {116, 116, 179}, {117, 122, 61}, },
            {{45, 122, -27}, },
            {{45, 103, -68}, {104, 104, 180}, {105, 122, 61}, },
            {{45, 110, -37}, {111, 111, 181}, {112, 122, 61}, },
            {{45, 100, -33}, {101, 101, 182}, {102, 122, 61}, },
            {{45, 122, -27}, },
            {{45, 110, -37}, {111, 111, 183}, {112, 122, 61}, },
            {{45, 122, -27}, },
            {{45, 115, -74}, {116, 116, 184}, {117, 122, 61}, },
            {{45, 90, -27}, {97, 116, 61}, {117, 117, 185}, {118, 122, 61}, },
            {{45, 110, -37}, {111, 111, 186}, {112, 122, 61}, },
            {{45, 100, -33}, {101, 101, 187}, {102, 122, 61}, },
            {{45, 104, -39}, {105, 105, 188}, {106, 122, 61}, },
            {{45, 90, -27}, {97, 107, 61}, {108, 108, 189}, {109, 122, 61}, },
            {{45, 122, -86}, },
            {{9, 47, -94}, {48, 57, 190}, {58, 92, -94}, {93, 119, 42}, {120, 120, 191}, {121, 127, 42}, },
            {{9, 38, -44}, {39, 44, 42}, {45, 45, 192}, {46, 46, 193}, {47, 47, 42}, {48, 57, 194}, {58, 58, 195}, {59, 59, 196}, {60, 64, -83}, {65, 90, 197}, {91, 94, -83}, {95, 95, 198}, {96, 96, 42}, {97, 122, 199}, {123, 127, 42}, },
            {{9, 127, -127}, },
            {{9, 127, -127}, },
            {{9, 127, -44}, },
            {{9, 127, -85}, },
            {{45, 122, -86}, },
            {{45, 122, -86}, },
            {{45, 122, -86}, },
            {{45, 122, -86}, },
            {{9, 127, -44}, },
            {{45, 122, -86}, },
            {{45, 122, -86}, },
            {{45, 122, -86}, },
            {{9, 57, -87}, {58, 58, 43}, {59, 59, 200}, {60, 255, -8}, },
            {{9, 47, -87}, {48, 57, 201}, {58, 60, -87}, {61, 64, 43}, {65, 90, 202}, {91, 92, -47}, {93, 96, 43}, {97, 122, 203}, {123, 255, -47}, },
            {{9, 255, -88}, },
            {{9, 255, -88}, },
            {{9, 255, -88}, },
            {{9, 255, -88}, },
            {{9, 255, -8}, },
            {{9, 255, -88}, },
            {{9, 255, -88}, },
            {{9, 255, -88}, },
            {{32, 255, -48}, },
            {{48, 57, 204}, },
            {{32, 255, -48}, },
            {{32, 255, -48}, },
            {{32, 255, -48}, },
            {{9, 47, -94}, {48, 57, 205}, {58, 127, -94}, },
            {{9, 127, -44}, },
            {{9, 127, -49}, },
            {{0, 65535, -98}, },
            {{0, 41, 96}, {42, 42, 157}, {43, 65535, -53}, },
            {{45, 122, -103}, },
            {{45, 122, -103}, },
            {{45, 122, -103}, },
            {{45, 122, -103}, },
            {{9, 127, -24}, },
            {{45, 122, -103}, },
            {{45, 122, -103}, },
            {{45, 122, -103}, },
            {{9, 57, -104}, {58, 58, 53}, {59, 59, 206}, {60, 127, -24}, },
            {{9, 47, -104}, {48, 57, 207}, {58, 60, -104}, {61, 64, 53}, {65, 90, 208}, {91, 92, -57}, {93, 96, 53}, {97, 122, 209}, {123, 127, 53}, },
            {{9, 127, -105}, },
            {{9, 127, -105}, },
            {{9, 127, -105}, },
            {{9, 127, -105}, },
            {{9, 127, -24}, },
            {{9, 127, -105}, },
            {{9, 127, -105}, },
            {{9, 127, -105}, },
            {{48, 90, -110}, {93, 93, 210}, {97, 122, 178}, },
            {{48, 122, -178}, },
            {{48, 122, -178}, },
            {{45, 90, -27}, {97, 97, 211}, {98, 122, 61}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 113, -79}, {114, 114, 212}, {115, 122, 61}, },
            {{45, 122, -27}, },
            {{45, 107, -124}, {108, 108, 213}, {109, 122, 61}, },
            {{45, 113, -79}, {114, 114, 214}, {115, 122, 61}, },
            {{45, 122, -27}, },
            {{45, 90, -27}, {97, 109, 61}, {110, 110, 215}, {111, 122, 61}, },
            {{45, 99, -32}, {100, 100, 216}, {101, 122, 61}, },
            {{9, 57, -126}, {58, 58, 42}, {59, 59, 217}, {60, 127, -44}, },
            {{9, 47, -94}, {48, 57, 218}, {58, 60, -49}, {61, 64, 42}, {65, 90, 219}, {91, 92, -83}, {93, 96, 42}, {97, 122, 220}, {123, 127, 42}, },
            {{9, 127, -127}, },
            {{9, 127, -127}, },
            {{9, 127, -127}, },
            {{9, 127, -127}, },
            {{9, 127, -44}, },
            {{9, 127, -127}, },
            {{9, 127, -127}, },
            {{9, 127, -127}, },
            {{9, 255, -8}, },
            {{9, 57, -141}, {58, 58, 43}, {59, 59, 221}, {60, 255, -141}, },
            {{9, 255, -203}, },
            {{9, 255, -203}, },
            {{48, 57, 222}, },
            {{9, 255, -8}, },
            {{9, 127, -24}, },
            {{9, 57, -169}, {58, 58, 53}, {59, 59, 223}, {60, 127, -169}, },
            {{9, 127, -209}, },
            {{9, 127, -209}, },
            {},
            {{45, 122, -27}, },
            {{45, 115, -74}, {116, 116, 224}, {117, 122, 61}, },
            {{45, 100, -33}, {101, 101, 225}, {102, 122, 61}, },
            {{45, 99, -32}, {100, 100, 226}, {101, 122, 61}, },
            {{45, 90, -27}, {97, 102, 61}, {103, 103, 227}, {104, 122, 61}, },
            {{45, 122, -27}, },
            {{9, 127, -44}, },
            {{9, 57, -193}, {58, 58, 42}, {59, 59, 228}, {60, 127, -193}, },
            {{9, 127, -220}, },
            {{9, 127, -220}, },
            {{9, 255, -8}, },
            {{32, 255, -48}, },
            {{9, 127, -24}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{45, 122, -27}, },
            {{9, 127, -44}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // NORMAL
        {40, 40, 40, 40, 40, 32, -1, 27, 28, 30, -1, 43, 17, 18, 38, 24, 25, 37, 42, 35, 23, 36, -1, 31, 29, 41, 21, 22, 26, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 19, -1, 20, -1, 46, -1, 47, -1, 33, 43, -1, -1, -1, 48, -1, 49, -1, 41, 41, 41, 41, -1, 41, 41, 41, 41, 41, 41, 41, 1, 41, 6, 41, 41, 41, 41, 41, 41, 41, 34, 46, -1, -1, -1, -1, 46, -1, -1, 39, 39, 39, -1, 48, -1, -1, -1, -1, 48, -1, -1, 41, 41, 5, 41, 41, 41, 7, 41, 4, 41, 41, 41, 41, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 41, 3, 9, 2, 41, 14, 41, 41, 13, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, 45, 10, 41, 41, 41, 41, 41, 11, -1, -1, 41, 12, 0, 15, 16, 8, },
        // COMMENT
        {40, 40, 40, 40, 40, 32, -1, 27, 28, 30, -1, 43, 17, 18, 38, 24, 25, 37, 42, 35, 23, 36, -1, 31, 29, 41, 21, 22, 26, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 19, -1, 20, -1, -1, 44, -1, 47, -1, -1, 33, 43, -1, -1, -1, 48, -1, 49, -1, 41, 41, 41, 41, -1, 41, 41, 41, 41, 41, 41, 1, 41, 6, 41, 41, 41, 41, 41, 41, 41, 34, 46, -1, 47, -1, 44, -1, -1, -1, -1, 44, -1, 46, -1, -1, -1, -1, -1, 39, 39, 39, -1, 48, -1, -1, -1, -1, 48, -1, -1, 41, 5, 41, 41, 41, 7, 41, 4, 41, 41, 41, 41, 41, 41, 46, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 3, 9, 2, 41, 14, 41, 41, 13, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 10, 41, 41, 41, 41, 11, -1, -1, -1, -1, -1, -1, -1, 12, 0, 15, 16, -1, },

    };*/

    public static class State
    {
        public final static State NORMAL = new State(0);
        public final static State COMMENT = new State(1);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
