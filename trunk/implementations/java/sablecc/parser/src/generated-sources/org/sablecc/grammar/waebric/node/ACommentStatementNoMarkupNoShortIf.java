/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.node;

import org.sablecc.grammar.waebric.analysis.*;

@SuppressWarnings("nls")
public final class ACommentStatementNoMarkupNoShortIf extends PStatementNoMarkupNoShortIf
{
    private TComment _comment_;
    private TStrCon _strCon_;
    private TSemiColon _semiColon_;

    public ACommentStatementNoMarkupNoShortIf()
    {
        // Constructor
    }

    public ACommentStatementNoMarkupNoShortIf(
        @SuppressWarnings("hiding") TComment _comment_,
        @SuppressWarnings("hiding") TStrCon _strCon_,
        @SuppressWarnings("hiding") TSemiColon _semiColon_)
    {
        // Constructor
        setComment(_comment_);

        setStrCon(_strCon_);

        setSemiColon(_semiColon_);

    }

    @Override
    public Object clone()
    {
        return new ACommentStatementNoMarkupNoShortIf(
            cloneNode(this._comment_),
            cloneNode(this._strCon_),
            cloneNode(this._semiColon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACommentStatementNoMarkupNoShortIf(this);
    }

    public TComment getComment()
    {
        return this._comment_;
    }

    public void setComment(TComment node)
    {
        if(this._comment_ != null)
        {
            this._comment_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comment_ = node;
    }

    public TStrCon getStrCon()
    {
        return this._strCon_;
    }

    public void setStrCon(TStrCon node)
    {
        if(this._strCon_ != null)
        {
            this._strCon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._strCon_ = node;
    }

    public TSemiColon getSemiColon()
    {
        return this._semiColon_;
    }

    public void setSemiColon(TSemiColon node)
    {
        if(this._semiColon_ != null)
        {
            this._semiColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semiColon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comment_)
            + toString(this._strCon_)
            + toString(this._semiColon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comment_ == child)
        {
            this._comment_ = null;
            return;
        }

        if(this._strCon_ == child)
        {
            this._strCon_ = null;
            return;
        }

        if(this._semiColon_ == child)
        {
            this._semiColon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comment_ == oldChild)
        {
            setComment((TComment) newChild);
            return;
        }

        if(this._strCon_ == oldChild)
        {
            setStrCon((TStrCon) newChild);
            return;
        }

        if(this._semiColon_ == oldChild)
        {
            setSemiColon((TSemiColon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
