/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.node;

import org.sablecc.grammar.waebric.analysis.*;

@SuppressWarnings("nls")
public final class ANoAndOrPredicate extends PPredicate
{
    private PPredicateNoAndOr _predicateNoAndOr_;

    public ANoAndOrPredicate()
    {
        // Constructor
    }

    public ANoAndOrPredicate(
        @SuppressWarnings("hiding") PPredicateNoAndOr _predicateNoAndOr_)
    {
        // Constructor
        setPredicateNoAndOr(_predicateNoAndOr_);

    }

    @Override
    public Object clone()
    {
        return new ANoAndOrPredicate(
            cloneNode(this._predicateNoAndOr_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANoAndOrPredicate(this);
    }

    public PPredicateNoAndOr getPredicateNoAndOr()
    {
        return this._predicateNoAndOr_;
    }

    public void setPredicateNoAndOr(PPredicateNoAndOr node)
    {
        if(this._predicateNoAndOr_ != null)
        {
            this._predicateNoAndOr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._predicateNoAndOr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._predicateNoAndOr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._predicateNoAndOr_ == child)
        {
            this._predicateNoAndOr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._predicateNoAndOr_ == oldChild)
        {
            setPredicateNoAndOr((PPredicateNoAndOr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
