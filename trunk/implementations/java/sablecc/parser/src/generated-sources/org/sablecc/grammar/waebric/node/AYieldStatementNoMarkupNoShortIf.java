/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.node;

import org.sablecc.grammar.waebric.analysis.*;

@SuppressWarnings("nls")
public final class AYieldStatementNoMarkupNoShortIf extends PStatementNoMarkupNoShortIf
{
    private TYield _yield_;
    private TSemiColon _semiColon_;

    public AYieldStatementNoMarkupNoShortIf()
    {
        // Constructor
    }

    public AYieldStatementNoMarkupNoShortIf(
        @SuppressWarnings("hiding") TYield _yield_,
        @SuppressWarnings("hiding") TSemiColon _semiColon_)
    {
        // Constructor
        setYield(_yield_);

        setSemiColon(_semiColon_);

    }

    @Override
    public Object clone()
    {
        return new AYieldStatementNoMarkupNoShortIf(
            cloneNode(this._yield_),
            cloneNode(this._semiColon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAYieldStatementNoMarkupNoShortIf(this);
    }

    public TYield getYield()
    {
        return this._yield_;
    }

    public void setYield(TYield node)
    {
        if(this._yield_ != null)
        {
            this._yield_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._yield_ = node;
    }

    public TSemiColon getSemiColon()
    {
        return this._semiColon_;
    }

    public void setSemiColon(TSemiColon node)
    {
        if(this._semiColon_ != null)
        {
            this._semiColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semiColon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._yield_)
            + toString(this._semiColon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._yield_ == child)
        {
            this._yield_ = null;
            return;
        }

        if(this._semiColon_ == child)
        {
            this._semiColon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._yield_ == oldChild)
        {
            setYield((TYield) newChild);
            return;
        }

        if(this._semiColon_ == oldChild)
        {
            setSemiColon((TSemiColon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
