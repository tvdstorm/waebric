/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.node;

import org.sablecc.grammar.waebric.analysis.*;

@SuppressWarnings("nls")
public final class ADesignatorWithArgsMarkup extends PMarkup
{
    private PMarkupNoShortMarkup _markupNoShortMarkup_;

    public ADesignatorWithArgsMarkup()
    {
        // Constructor
    }

    public ADesignatorWithArgsMarkup(
        @SuppressWarnings("hiding") PMarkupNoShortMarkup _markupNoShortMarkup_)
    {
        // Constructor
        setMarkupNoShortMarkup(_markupNoShortMarkup_);

    }

    @Override
    public Object clone()
    {
        return new ADesignatorWithArgsMarkup(
            cloneNode(this._markupNoShortMarkup_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADesignatorWithArgsMarkup(this);
    }

    public PMarkupNoShortMarkup getMarkupNoShortMarkup()
    {
        return this._markupNoShortMarkup_;
    }

    public void setMarkupNoShortMarkup(PMarkupNoShortMarkup node)
    {
        if(this._markupNoShortMarkup_ != null)
        {
            this._markupNoShortMarkup_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._markupNoShortMarkup_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._markupNoShortMarkup_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._markupNoShortMarkup_ == child)
        {
            this._markupNoShortMarkup_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._markupNoShortMarkup_ == oldChild)
        {
            setMarkupNoShortMarkup((PMarkupNoShortMarkup) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
