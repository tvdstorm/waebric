/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.grammar.waebric.node;

import org.sablecc.grammar.waebric.analysis.*;

@SuppressWarnings("nls")
public final class ANoShortIfStatementNoMarkup extends PStatementNoMarkup
{
    private PStatementNoMarkupNoShortIf _statementNoMarkupNoShortIf_;

    public ANoShortIfStatementNoMarkup()
    {
        // Constructor
    }

    public ANoShortIfStatementNoMarkup(
        @SuppressWarnings("hiding") PStatementNoMarkupNoShortIf _statementNoMarkupNoShortIf_)
    {
        // Constructor
        setStatementNoMarkupNoShortIf(_statementNoMarkupNoShortIf_);

    }

    @Override
    public Object clone()
    {
        return new ANoShortIfStatementNoMarkup(
            cloneNode(this._statementNoMarkupNoShortIf_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANoShortIfStatementNoMarkup(this);
    }

    public PStatementNoMarkupNoShortIf getStatementNoMarkupNoShortIf()
    {
        return this._statementNoMarkupNoShortIf_;
    }

    public void setStatementNoMarkupNoShortIf(PStatementNoMarkupNoShortIf node)
    {
        if(this._statementNoMarkupNoShortIf_ != null)
        {
            this._statementNoMarkupNoShortIf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._statementNoMarkupNoShortIf_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._statementNoMarkupNoShortIf_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._statementNoMarkupNoShortIf_ == child)
        {
            this._statementNoMarkupNoShortIf_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._statementNoMarkupNoShortIf_ == oldChild)
        {
            setStatementNoMarkupNoShortIf((PStatementNoMarkupNoShortIf) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
