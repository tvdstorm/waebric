/*
 * Generated by classgen, version 1.5
 * 7/30/09 10:24 AM
 */
package waebric.node;

public class Call extends Markup {

  public Designator d;
  public Args args;

  public Call (Designator d, Args args) {
    this.d = d;
    if (d != null) d.setParent(this);
    this.args = args;
    if (args != null) args.setParent(this);
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (d != null) d.accept(visitor);
    if (args != null) args.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (d != null) d.traverseTopDown(visitor);
    if (args != null) args.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (d != null) d.traverseBottomUp(visitor);
    if (args != null) args.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Call(\n");
      if (d != null)
        buffer.append(d.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (args != null)
        buffer.append(args.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Call]");
    return buffer.toString();
  }
}
