/*
 * Generated by classgen, version 1.5
 * 6/16/09 7:49 PM
 */
package waebric.node;

public class And extends Predicate {

  public Predicate p1;
  public Predicate p2;

  public And (Predicate p1, Predicate p2) {
    this.p1 = p1;
    if (p1 != null) p1.setParent(this);
    this.p2 = p2;
    if (p2 != null) p2.setParent(this);
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (p1 != null) p1.accept(visitor);
    if (p2 != null) p2.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (p1 != null) p1.traverseTopDown(visitor);
    if (p2 != null) p2.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (p1 != null) p1.traverseBottomUp(visitor);
    if (p2 != null) p2.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("And(\n");
      if (p1 != null)
        buffer.append(p1.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (p2 != null)
        buffer.append(p2.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [And]");
    return buffer.toString();
  }
}
